{"version":3,"file":"js/app.d8cfca28.js","mappings":"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","sources":["webpack://cybercells/./src/gl/ShaderManager.ts","webpack://cybercells/./src/shaders/common.vert","webpack://cybercells/./src/shaders/background.frag","webpack://cybercells/./src/shaders/cell.frag","webpack://cybercells/./src/shaders/wall.frag","webpack://cybercells/./src/shaders/empty.frag","webpack://cybercells/./src/geom/Vector2.ts","webpack://cybercells/./src/geom/Aabb.ts","webpack://cybercells/./src/game/world/object/Cell.ts","webpack://cybercells/./src/game/world/object/Wall.ts","webpack://cybercells/./src/geom/Geometry.ts","webpack://cybercells/./src/render/WorldRenderer.ts","webpack://cybercells/./src/game/event/WorldMouseEvent.ts","webpack://cybercells/./src/component/WorldViewer.vue?b6c6","webpack://cybercells/./src/component/WorldViewer.vue","webpack://cybercells/./src/component/properties/PropertiesTabbedPanel.vue?3591","webpack://cybercells/./src/component/properties/PropertiesTabbedPanel.vue","webpack://cybercells/./src/component/HudButton.vue?c952","webpack://cybercells/./src/component/HudButton.vue","webpack://cybercells/./src/component/properties/PropertiesTab.vue?d676","webpack://cybercells/./src/component/properties/PropertiesTab.vue","webpack://cybercells/./src/component/properties/PropertiesTabBody.vue?2f09","webpack://cybercells/./src/component/properties/PropertiesTabBody.vue","webpack://cybercells/./src/component/properties/PropertiesSection.vue?1a5d","webpack://cybercells/./src/component/properties/PropertiesSection.vue","webpack://cybercells/./src/component/input/NumberSlider.vue?bb1e","webpack://cybercells/./src/component/input/NumberSlider.vue","webpack://cybercells/./src/component/input/SliderWithNumberInput.vue?7062","webpack://cybercells/./src/component/input/SliderWithNumberInput.vue","webpack://cybercells/./src/component/input/InputLabel.vue","webpack://cybercells/./src/component/input/InputLabel.vue?e8ad","webpack://cybercells/./src/component/WorldSettings.vue?daf4","webpack://cybercells/./src/component/WorldSettings.vue","webpack://cybercells/./src/game/CellType.ts","webpack://cybercells/./src/game/world/object/Food.ts","webpack://cybercells/./src/game/Genome.ts","webpack://cybercells/./src/game/Camera.ts","webpack://cybercells/./src/game/world/World.ts","webpack://cybercells/./src/component/genome/CellGenomePreview.vue?bc20","webpack://cybercells/./src/component/genome/CellGenomePreview.vue","webpack://cybercells/./src/component/genome/GenomeSelector.vue?f571","webpack://cybercells/./src/component/genome/GenomeSelector.vue","webpack://cybercells/./src/component/properties/PropertiesSubheader.vue","webpack://cybercells/./src/component/properties/PropertiesSubheader.vue?130a","webpack://cybercells/./src/component/genome/GenomePigmentColorDropletIcon.vue?210e","webpack://cybercells/./src/component/genome/GenomePigmentColorDropletIcon.vue","webpack://cybercells/./src/component/genome/GenomePigmentsEditor.vue?681e","webpack://cybercells/./src/component/genome/GenomePigmentsEditor.vue","webpack://cybercells/./src/component/genome/GenomeEditor.vue?1405","webpack://cybercells/./src/component/genome/GenomeEditor.vue","webpack://cybercells/./src/component/genome/GenomeLibraryEditor.vue?f406","webpack://cybercells/./src/component/genome/GenomeLibraryEditor.vue","webpack://cybercells/./src/component/TimeControl.vue?2009","webpack://cybercells/./src/component/TimeControl.vue","webpack://cybercells/./src/component/HudPanel.vue?62d3","webpack://cybercells/./src/component/HudPanel.vue","webpack://cybercells/./src/game/GenomeLibrary.ts","webpack://cybercells/./src/AppPreferences.ts","webpack://cybercells/./src/tool/ToolsManager.ts","webpack://cybercells/./src/tool/AddCellTool.ts","webpack://cybercells/./src/tool/RemoveCellTool.ts","webpack://cybercells/./src/tool/SelectionTool.ts","webpack://cybercells/./src/game/world/updater/ResetContextUpdater.ts","webpack://cybercells/./src/game/world/updater/UpdateContext.ts","webpack://cybercells/./src/game/world/updater/KineticsUpdater.ts","webpack://cybercells/./src/game/world/updater/ApplyContextUpdater.ts","webpack://cybercells/./src/game/world/updater/PositionUpdater.ts","webpack://cybercells/./src/game/world/updater/WorldUpdater.ts","webpack://cybercells/./src/App.vue?2a5e","webpack://cybercells/./src/App.vue","webpack://cybercells/./src/main.ts","webpack://cybercells/webpack/bootstrap","webpack://cybercells/webpack/runtime/chunk loaded","webpack://cybercells/webpack/runtime/compat get default export","webpack://cybercells/webpack/runtime/define property getters","webpack://cybercells/webpack/runtime/global","webpack://cybercells/webpack/runtime/hasOwnProperty shorthand","webpack://cybercells/webpack/runtime/publicPath","webpack://cybercells/webpack/runtime/jsonp chunk loading","webpack://cybercells/webpack/startup"],"sourcesContent":["export default class ShaderManager {\n    private constructor(\n        public readonly gl: WebGL2RenderingContext\n    ) {}\n\n    static init(canvas: HTMLCanvasElement): ShaderManager {\n        const gl = canvas.getContext('webgl2', {\n            powerPreference: 'high-performance'\n        })\n\n        if (gl == null)\n            throw new Error(\"Unable to initialize WebGL!\")\n\n        return new ShaderManager(gl)\n    }\n\n    newShader(vertexShaderSource: string, fragmentShaderSource: string): WebGLProgram {\n        const vertexShader = this.loadShader(this.gl.VERTEX_SHADER, vertexShaderSource)\n        const fragmentShader = this.loadShader(this.gl.FRAGMENT_SHADER, fragmentShaderSource)\n\n        const shaderProgram = this.gl.createProgram()!\n        this.gl.attachShader(shaderProgram, vertexShader)\n        this.gl.attachShader(shaderProgram, fragmentShader)\n        this.gl.linkProgram(shaderProgram)\n\n        if (!this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS)) {\n            throw new Error(`Couldn't link shaders! Logs:\\n${this.gl.getProgramInfoLog(shaderProgram)}`)\n        }\n\n        return shaderProgram\n    }\n\n    newTexture(width: number, height: number): WebGLTexture | null {\n        const texture = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n        this.gl.texImage2D(\n            this.gl.TEXTURE_2D, 0, this.gl.RGBA, width, height,\n            0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null\n        );\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n        return texture\n    }\n\n    newArrayBuffer(data: number[]): WebGLBuffer {\n        const buffer = this.gl.createBuffer()\n        if (buffer == null)\n            throw new Error(\"Could not create buffer\")\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer)\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(data), this.gl.STATIC_DRAW)\n        return buffer\n    }\n\n    destroy() {\n        this.gl.getExtension(\"WEBGL_lose_context\")!.loseContext();\n    }\n\n    private loadShader(type: number, source: string): WebGLShader {\n        const shader = this.gl.createShader(type)!\n        this.gl.shaderSource(shader, source)\n        this.gl.compileShader(shader)\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            throw new Error(`Couldn't compile shaders! Logs:\\n\\n${this.gl.getShaderInfoLog(shader)}`)\n        }\n\n        return shader\n    }\n}","export default \"#version 300 es\\n\\nin vec4 vertexPosition;\\nin vec2 textureCoordinate;\\nout vec2 texel;\\n\\nvoid main() {\\n    gl_Position = vertexPosition;\\n    texel = textureCoordinate;\\n}\";","export default \"#version 300 es\\n\\nprecision highp float;\\nprecision highp sampler2D;\\n\\nconst float CHECKER_SIZE = 25.0;\\nconst vec4 LIGHT_COLOR = vec4(0.88, 0.88, 1, 1);\\n\\nuniform mat4 viewMatrix;\\nuniform float time;\\nuniform vec2 areaSize;\\n\\nuniform float lightIntensity;\\n\\nout vec4 color;\\n\\nvec4 lightFunction(float x, float y) {\\n    return vec4(0, 0, 0, 0);\\n}\\n\\nvoid main() {\\n    vec4 fragment = viewMatrix * gl_FragCoord;\\n    float x = fragment.x;\\n    float y = fragment.y;\\n\\n    float value = mod(floor(x/CHECKER_SIZE) + floor(y/CHECKER_SIZE), 2.0) == 0.0 ? 0.4 : 0.2;\\n    color = vec4(value, value, value, 1);\\n//    color = vec4(0.4, 0.7, 0.9, 1);\\n    color = mix(color, lightFunction(x, y), lightIntensity);\\n\\n    if (x < 0.0 || y < 0.0 || x >= areaSize.x || y >= areaSize.y)\\n        color = mix(color, vec4(0, 0, 0, 1), 0.3);\\n}\";","export default \"#version 300 es\\n\\nprecision highp float;\\nprecision highp sampler2D;\\n\\nconst float POSITIVE_INFINITY = 1.0 / 0.0;\\nconst float NAN = 0.0 / 0.0;\\n\\nconst float CELL_BORDER_WIDTH = 2.0;\\nconst int MAX_OBSTACLES = 32;\\n\\nstruct Cell {\\n    int id;\\n    vec2 center;\\n    vec2 speed;\\n    float mass;\\n    float angle;\\n    float radius;\\n    vec4 bodyRgba;\\n};\\n\\nstruct Obstacle {\\n    vec2 a;\\n    vec2 b;\\n};\\n\\nuniform sampler2D image;\\nuniform vec2 imageSize;\\nuniform mat4 viewMatrix;\\nuniform float time;\\n\\nuniform Cell cell;\\n\\nuniform Obstacle obstacles[MAX_OBSTACLES];\\nuniform int obstaclesSize;\\n\\nin vec2 texel;\\nout vec4 color;\\n\\nvec4 previousLayerColor(float x, float y) {\\n    vec2 imagePixelSize = vec2(1.0, 1.0) / imageSize;\\n    return texture(image, vec2(texel.x + x * imagePixelSize.x, texel.y + y * imagePixelSize.y));\\n}\\n\\nvec2 projectPointOntoLine(vec2 p, vec2 lineStart, vec2 lineEnd) {\\n    vec2 a = lineStart;\\n    vec2 b = lineEnd;\\n    if (a == b)\\n        return a;\\n    return (b - a) * dot(p - a, b - a) / dot(b - a, b - a) + a;\\n}\\n\\nvec2 findVerticalLineIntersection(vec2 verticalStart, vec2 verticalEnd, vec2 otherStart, vec2 otherEnd) {\\n    if (otherStart.x == otherEnd.x)\\n        return vec2(NAN);\\n\\n    float otherAngleRatio = (otherEnd.y - otherStart.y) / (otherEnd.x - otherStart.x);\\n    float otherOffset = otherStart.y - otherAngleRatio * otherStart.x;\\n    vec2 intersection = vec2(verticalStart.x, 0);\\n    intersection.y = otherAngleRatio * intersection.x + otherOffset;\\n    if (otherStart.x < intersection.x && otherEnd.x < intersection.x ||\\n        otherStart.x > intersection.x && otherEnd.x > intersection.x)\\n        return vec2(NAN);\\n    float avgY = (verticalStart.y + verticalEnd.y)/2.0;\\n    float height = abs(verticalStart.y - verticalEnd.y);\\n    return abs(intersection.y - avgY) <= height/2.0 ? intersection : vec2(NAN);\\n}\\n\\nvec2 findLinesIntersections(vec2 line1Start, vec2 line1End, vec2 line2Start, vec2 line2End) {\\n    vec2 line1Vector = line1End - line1Start;\\n    vec2 line2Vector = line2End - line2Start;\\n\\n    float angle1Ratio = line1Vector.y / line1Vector.x;\\n    float angle2Ratio = line2Vector.y / line2Vector.x;\\n\\n    if (isnan(angle1Ratio) || isnan(angle2Ratio)\\n        || isinf(angle1Ratio) && isinf(angle2Ratio)\\n        || angle1Ratio == angle2Ratio)\\n        return vec2(NAN);\\n\\n    if (isinf(angle1Ratio))\\n        return findVerticalLineIntersection(line1Start, line1End, line2Start, line2End);\\n    if (isinf(angle2Ratio))\\n        return findVerticalLineIntersection(line2Start, line2End, line1Start, line1End);\\n\\n    float line1Offset = line1Start.y - angle1Ratio * line1Start.x;\\n    float line2Offset = line2Start.y - angle2Ratio * line2Start.x;\\n\\n    vec2 intersection = vec2((line2Offset - line1Offset) / (angle1Ratio - angle2Ratio), 0);\\n    intersection.y = angle1Ratio * intersection.x + line1Offset;\\n\\n    vec2 v1 = intersection - line1Start;\\n    vec2 v2 = intersection - line2Start;\\n    return (\\n        dot(line1Vector, v1) >= 0.0 &&\\n        dot(line1Vector, v1) <= dot(line1Vector, line1Vector) &&\\n        dot(line2Vector, v2) >= 0.0 &&\\n        dot(line2Vector, v2) <= dot(line2Vector, line2Vector)\\n    ) ? intersection : vec2(NAN);\\n}\\n\\nfloat nearestObstacleDistance(vec2 p) {\\n    float result = POSITIVE_INFINITY;\\n\\n    for (int i = 0; i < obstaclesSize; i++) {\\n        Obstacle obstacle = obstacles[i];\\n        vec2 projected = projectPointOntoLine(p, obstacle.a, obstacle.b);\\n        float fractionalDistance = length(projected - obstacle.a) / length(obstacle.b - obstacle.a) * sign(dot(obstacle.b - obstacle.a, projected - obstacle.a));\\n        if (fractionalDistance >= 0.0 && fractionalDistance < 1.0 && length(projected - p) < result)\\n            result = length(projected - p);\\n    }\\n\\n    return result;\\n}\\n\\nbool isPointBehindLine(vec2 p, vec2 lineStart, vec2 lineEnd) {\\n    return !any(isnan(findLinesIntersections(cell.center, p, lineStart, lineEnd)));\\n}\\n\\nbool isPointBehindObstacles(vec2 p) {\\n    for (int i = 0; i < obstaclesSize; i++) {\\n        Obstacle obstacle = obstacles[i];\\n        if (isPointBehindLine(p, obstacle.a, obstacle.b))\\n            return true;\\n    }\\n\\n    return false;\\n}\\n\\nvoid main() {\\n    vec4 fragment = viewMatrix * gl_FragCoord;\\n    float x = fragment.x;\\n    float y = fragment.y;\\n\\n    vec2 imagePixelSize = vec2(1.0, 1.0) / imageSize;\\n\\n    vec4 background = texture(image, texel);\\n    vec4 layerColor = vec4(0);\\n\\n    vec4 borderColor = mix(cell.bodyRgba, vec4(0, 0, 0, 1), 0.25);\\n    float centerDistance = sqrt(pow(x - cell.center.x, 2.0) + pow(y - cell.center.y, 2.0));\\n\\n    // This may be optimized to round through the obstacles array once per fragment\\n    if (centerDistance <= cell.radius && !isPointBehindObstacles(fragment.xy)) {\\n        layerColor = cell.bodyRgba;\\n\\n        if (centerDistance > cell.radius - CELL_BORDER_WIDTH\\n            || nearestObstacleDistance(fragment.xy) <= CELL_BORDER_WIDTH)\\n            layerColor = borderColor;\\n    }\\n\\n    color = mix(background, vec4(layerColor.rgb, 1), layerColor.a);\\n}\";","export default \"#version 300 es\\n\\nprecision highp float;\\nprecision highp sampler2D;\\n\\nconst float WALL_THICKNESS = 2.0;\\n\\nstruct Wall {\\n    vec2 a;\\n    vec2 b;\\n};\\n\\nuniform sampler2D image;\\nuniform vec2 imageSize;\\nuniform mat4 viewMatrix;\\nuniform Wall wall;\\n\\nin vec2 texel;\\nout vec4 color;\\n\\nvec2 projectToWall(vec2 p) {\\n    vec2 a = wall.a;\\n    vec2 b = wall.b;\\n    if (a == b)\\n        return a;\\n    return (b - a) * dot(p - a, b - a) / dot(b - a, b - a) + a;\\n}\\n\\nvoid main() {\\n    vec4 fragment = viewMatrix * gl_FragCoord;\\n    float x = fragment.x;\\n    float y = fragment.y;\\n\\n    vec4 background = texture(image, texel);\\n    vec4 layerColor = vec4(0);\\n\\n    vec2 projected = projectToWall(fragment.xy);\\n    float fractionalDistance = length(projected - wall.a) / length(wall.b - wall.a) * sign(dot(wall.b - wall.a, projected - wall.a));\\n\\n    if (length(fragment.xy - projected) < WALL_THICKNESS/2.0\\n        && fractionalDistance >= 0.0 && fractionalDistance < 1.0\\n        || length(wall.a - fragment.xy) < WALL_THICKNESS/2.0\\n        || length(wall.b - fragment.xy) < WALL_THICKNESS/2.0)\\n        layerColor = vec4(0, 0, 0, 1);\\n\\n    color = mix(background, vec4(layerColor.rgb, 1), layerColor.a);\\n}\";","export default \"#version 300 es\\n\\nprecision highp float;\\nprecision highp sampler2D;\\n\\nuniform sampler2D image;\\n\\nin vec2 texel;\\nout vec4 color;\\n\\nvoid main() {\\n    color = texture(image, texel);\\n}\";","const { sqrt, pow, sin, cos, acos, PI } = Math\n\nexport default class Vector2 {\n    x: number\n    y: number\n\n    constructor(x: number = 0, y: number = 0) {\n        this.x = x\n        this.y = y\n    }\n\n    get length(): number {\n        return sqrt(pow(this.x, 2) + pow(this.y, 2))\n    }\n\n    plus(rvalue: Vector2 | number): Vector2 {\n        if (rvalue instanceof Vector2)\n            return new Vector2(this.x + rvalue.x, this.y + rvalue.y)\n        else\n            return new Vector2(this.x + rvalue, this.y + rvalue)\n    }\n\n    minus(rvalue: Vector2 | number): Vector2 {\n        if (rvalue instanceof Vector2)\n            return new Vector2(this.x - rvalue.x, this.y - rvalue.y)\n        else\n            return new Vector2(this.x - rvalue, this.y - rvalue)\n    }\n\n    times(factor: Vector2 | number): Vector2 {\n        if (factor instanceof Vector2)\n            return new Vector2(this.x * factor.y, this.y * factor.y);\n        else\n            return new Vector2(this.x * factor, this.y * factor);\n    }\n\n    div(factor: Vector2 | number): Vector2 {\n        if (factor instanceof Vector2)\n            return new Vector2(this.x / factor.y, this.x / factor.y);\n        else\n            return new Vector2(this.x / factor, this.y / factor);\n    }\n\n    get negative(): Vector2 {\n        return new Vector2(-this.x, -this.y)\n    }\n\n    dot(that: Vector2): number {\n        return this.x * that.x + this.y * that.y\n    }\n\n    to(that: Vector2): Vector2 {\n        return that.minus(this)\n    }\n\n    nearest(...vectors: Array<Vector2>): Vector2 {\n        return vectors.reduce((a, b) => this.distance(a) > this.distance(b) ? b : a)\n    }\n\n    /**\n     * This method calculates the shortest turn direction needed\n     * to get from this vector's angle to that vector's angle.\n     * \n     * @returns 1 if direction is counterclockwise, -1 otherwise\n     */\n    shortestAngularTurn(that: Vector2): number {\n        const diff = that.angle - this.angle\n        return (diff < -PI || diff >= 0.0 && diff < PI) ? 1 : -1\n    }\n\n    positiveAngleDiff(that: Vector2): number {\n        return (this.angle - that.angle + 2*PI) % (2*PI)\n    }\n\n    get angle(): number {\n        return this.y > 0 ? 2*PI - acos(this.x/this.length) : acos(this.x/this.length)\n    }\n\n    get angleSafe(): number {\n        return this.length != 0 ? this.angle : 0\n    }\n\n    distance(that: Vector2): number {\n        return sqrt(pow(this.x - that.x, 2) + pow(this.y - that.y, 2))\n    }\n\n    isNaN() {\n        return isNaN(this.x) || isNaN(this.y);\n    }\n\n    /**\n     * Returns a new vector rotated by given amount of radians.\n     * The positive argument is counterclockwise rotation.\n     */\n    rotate(radians: number): Vector2 {\n        return new Vector2(this.x * cos(radians) - this.y * sin(radians), this.x * sin(radians) + this.y * cos(radians))\n    }\n\n    get unit(): Vector2 {\n        return this.length != 0 ? new Vector2(this.x/this.length, this.y/this.length) : new Vector2()\n    }\n\n    static isNaN(vector: Vector2): boolean {\n        return isNaN(vector.x) || isNaN(vector.y)\n    }\n\n    static unit(radians: number): Vector2 {\n        return new Vector2(cos(radians), sin(radians))\n    }\n\n    static equals(a?: Vector2, b?: Vector2): boolean {\n        if (a == null && b == null)\n            return true\n        if (a == null || b == null)\n            return false\n        return a.x == b.x && a.y == b.y\n    }\n}","import Vector2 from \"@/geom/Vector2\";\n\n/**\n * Represents an Axis-Aligned Bounding Box.\n */\nexport default class Aabb {\n    min: Vector2\n    max: Vector2\n\n    /**\n     * @param min upper-left corner of the box\n     * @param max lower-right corner of the box\n     */\n    constructor(min: Vector2, max: Vector2) {\n        this.min = min\n        this.max = max\n    }\n\n    get center(): Vector2 {\n        return new Vector2((this.min.x + this.max.x)/2, (this.min.y + this.max.y)/2)\n    }\n\n    get width(): number {\n        return this.max.x - this.min.x\n    }\n\n    get height(): number {\n        return this.max.y - this.min.y\n    }\n}","import Vector2 from \"@/geom/Vector2\";\nimport Genome from \"@/game/Genome\";\nimport {HasAabb} from \"@/geom/HasAabb\";\nimport Aabb from \"@/geom/Aabb\";\n\nexport default class Cell implements WorldObject, HasAabb {\n    id = -1\n\n    constructor(\n        public center: Vector2,\n        public speed: Vector2,\n        public mass: number,\n        public angle: number,\n        public angularSpeed: number,\n        public genome: Genome,\n    ) {}\n\n    connections: Map<number, CellConnectionState> = new Map()\n    age: number = 0\n\n    public get radius() {\n        return Math.sqrt(this.mass)\n    }\n\n    get aabb() {\n        return new Aabb(this.center.minus(this.radius), this.center.plus(this.radius))\n    }\n}\n\nexport class CellConnectionState {\n    constructor(public angle: number, public partnerId: number) {}\n}","import Vector2 from \"@/geom/Vector2\";\n\nexport default class Wall implements WorldObject {\n    id = -1\n\n    constructor(public a: Vector2, public b: Vector2) {}\n}\n","import Vector2 from \"@/geom/Vector2\";\n\nexport default class Geometry {\n    static findLineAndCircleIntersections(\n        circleCenter: Vector2,\n        circleRadius: number,\n        lineStart: Vector2,\n        lineEnd: Vector2\n    ): Vector2[] {\n        const v1 = lineEnd.minus(lineStart);\n        const v2 = lineStart.minus(circleCenter);\n        const b = -2 * v1.dot(v2);\n        const c = 2 * (Math.pow(v1.x, 2) + Math.pow(v1.y, 2));\n        const d = Math.sqrt(\n            Math.pow(b, 2) - 2 * c * (Math.pow(v2.x, 2) + Math.pow(v2.y, 2) - Math.pow(circleRadius, 2))\n        );\n        if (isNaN(d))\n            return [];\n\n        const u1 = (b - d) / c;\n        const u2 = (b + d) / c;\n        const result = [];\n        if (u1 >= 0 && u1 <= 1)\n            result.push(new Vector2(lineStart.x + v1.x * u1, lineStart.y + v1.y * u1));\n        if (u2 >= 0 && u2 <= 1)\n            result.push(new Vector2(lineStart.x + v1.x * u2, lineStart.y + v1.y * u2));\n        return result;\n    }\n\n    static findCirclesIntersections(\n        circle1Center: Vector2,\n        circle1Radius: number,\n        circle2Center: Vector2,\n        circle2Radius: number\n    ): Vector2[] {\n        const distance = circle1Center.distance(circle2Center)\n        if (distance > circle1Radius + circle2Radius)\n            return [];\n\n        const a = circle1Center\n            .plus(circle2Center)\n            .times(0.5)\n            .plus(\n                circle2Center\n                    .minus(circle1Center)\n                    .times(\n                        Math.pow(circle1Radius, 2) - Math.pow(circle2Radius, 2)\n                    )\n                    .div(2*Math.pow(distance, 2))\n            );\n\n        const b = new Vector2(\n            circle2Center.y - circle1Center.y,\n            circle1Center.x - circle2Center.x\n        ).times(\n            0.5 * Math.sqrt(\n                2 * (Math.pow(circle1Radius, 2) + Math.pow(circle2Radius, 2)) / Math.pow(distance, 2) -\n                Math.pow(Math.pow(circle1Radius, 2) - Math.pow(circle2Radius, 2), 2) / Math.pow(distance, 4) - 1\n            )\n        );\n\n        if (a.isNaN() || b.isNaN())\n            return [];\n\n        return [a.plus(b), a.minus(b)];\n    }\n\n    static findLinesIntersection(\n        lineA: [Vector2, Vector2],\n        lineB: [Vector2, Vector2]\n    ): Vector2 | null {\n        const lineAVector = lineA[0].to(lineA[1]);\n        const lineBVector = lineB[0].to(lineB[1]);\n\n        const angle1Ratio = lineAVector.y / lineAVector.x;\n        const angle2Ratio = lineBVector.y / lineBVector.x;\n\n        if (isNaN(angle1Ratio) || isNaN(angle2Ratio) ||\n            !isFinite(angle1Ratio) && !isFinite(angle2Ratio) ||\n            angle1Ratio == angle2Ratio)\n            return null;\n\n        if (!isFinite(angle1Ratio))\n            return Geometry.findVerticalLineIntersection(lineA, lineB);\n        if (!isFinite(angle2Ratio))\n            return Geometry.findVerticalLineIntersection(lineB, lineA);\n\n        const lineAOffset = lineA[0].y - angle1Ratio * lineA[0].x;\n        const lineBOffset = lineB[0].y - angle2Ratio * lineB[0].x;\n\n        const intersection = new Vector2((lineBOffset - lineAOffset) / (angle1Ratio - angle2Ratio), 0);\n        intersection.y = angle1Ratio * intersection.x + lineAOffset;\n\n        const v1 = lineA[0].to(intersection);\n        const v2 = lineB[0].to(intersection);\n        return (\n            lineAVector.dot(v1) >= 0 &&\n            lineAVector.dot(v1) <= lineAVector.dot(lineAVector) &&\n            lineBVector.dot(v2) >= 0.0 &&\n            lineBVector.dot(v2) <= lineBVector.dot(lineBVector)\n        ) ? intersection : null;\n    }\n\n    static projectPointOntoLine(\n        point: Vector2,\n        line: [Vector2, Vector2]\n    ): Vector2 {\n        const a = line[0];\n        const b = line[1];\n        if (a.x == b.x)\n            return new Vector2(a.x, point.y);\n        return a.to(b).times(\n            a.to(point).dot(a.to(b)) / (a.to(b)).dot(a.to(b))\n        ).plus(a);\n    }\n\n    static clamp(value: number, min: number, max: number) {\n        return Math.min(Math.max(value, min), max);\n    }\n\n    private static findVerticalLineIntersection(\n        verticalLine: [Vector2, Vector2],\n        otherLine: [Vector2, Vector2]\n    ): Vector2 | null {\n        if (otherLine[0].x == otherLine[1].x)\n            return null;\n\n        const otherAngleRatio = (otherLine[1].y - otherLine[0].y) / (otherLine[1].x - otherLine[0].x);\n        const line2Offset = otherLine[0].y - otherAngleRatio * otherLine[0].x;\n        const intersection = new Vector2(verticalLine[0].x, 0);\n        intersection.y = otherAngleRatio * intersection.x + line2Offset;\n        if (otherLine[0].x < intersection.x && otherLine[1].x < intersection.x ||\n            otherLine[0].x > intersection.x && otherLine[1].x > intersection.x)\n            return null;\n        const avgY = (verticalLine[0].y + verticalLine[1].y) / 2;\n        const height = Math.abs(verticalLine[0].y - verticalLine[1].y);\n        return Math.abs(intersection.y - avgY) <= height/2 ? intersection : null;\n    }\n}","import ShaderManager from \"@/gl/ShaderManager\";\nimport { mat4, vec2 } from 'gl-matrix';\n\nimport World from \"@/game/world/World\";\n\nimport commonVertexShaderSource from 'raw-loader!@/shaders/common.vert';\nimport backgroundFragmentShaderSource from 'raw-loader!@/shaders/background.frag';\nimport cellFragmentShaderSource from 'raw-loader!@/shaders/cell.frag';\nimport wallFragmentShaderSource from 'raw-loader!@/shaders/wall.frag';\nimport emptyFragmentShaderSource from 'raw-loader!@/shaders/empty.frag';\nimport Vector2 from \"@/geom/Vector2\";\nimport Cell from \"@/game/world/object/Cell\";\nimport Wall from \"@/game/world/object/Wall\";\nimport Geometry from \"@/geom/Geometry\";\n\nexport default class WorldRenderer {\n    private readonly startTime = Date.now()\n\n    private readonly mainMesh: WebGLBuffer\n    private readonly drawBufferTextureUv: WebGLBuffer\n    private readonly framebuffer: WebGLFramebuffer | null\n\n    private bufferTextureSize: Vector2 = new Vector2()\n    private sourceBufferTexture: WebGLTexture | null = null\n    private targetBufferTexture: WebGLTexture | null = null\n\n    public config = {\n        layers: {\n            background: true,\n            walls: true,\n            cells: true\n        }\n    }\n\n    private constructor(\n        private shaderManager: ShaderManager,\n        private backgroundShader: WebGLShader,\n        private cellShader: WebGLShader,\n        private wallShader: WebGLShader,\n        private emptyShader: WebGLShader,\n        public world: World | null = null\n    ) {\n        this.mainMesh = this.createMainMesh();\n        this.drawBufferTextureUv = this.createDrawBufferTextureUv();\n        this.framebuffer = shaderManager.gl.createFramebuffer();\n        this.autoUpdateDrawBufferTexture();\n    }\n\n    static init(canvas: HTMLCanvasElement, worldState: World | null = null): WorldRenderer {\n        const shaderManager = ShaderManager.init(canvas);\n\n        const backgroundShader = shaderManager.newShader(commonVertexShaderSource, backgroundFragmentShaderSource);\n        const cellShader = shaderManager.newShader(commonVertexShaderSource, cellFragmentShaderSource);\n        const wallShader = shaderManager.newShader(commonVertexShaderSource, wallFragmentShaderSource);\n        const emptyShader = shaderManager.newShader(commonVertexShaderSource, emptyFragmentShaderSource);\n        return new WorldRenderer(shaderManager, backgroundShader, cellShader, wallShader, emptyShader, worldState);\n    }\n\n    render() {\n        const gl = this.shaderManager.gl;\n\n        this.setDrawToBufferTexture();\n        this.swapBuffers();\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        if (this.config.layers.background)\n            this.renderBackground();\n        if (this.config.layers.cells)\n            this.renderCells();\n        if (this.config.layers.walls)\n            this.renderWalls();\n\n        this.renderBufferToCanvas();\n    }\n\n    /**\n     * From world coordinates to screen coordinates.\n     */\n    project(worldPoint: vec2): vec2 {\n        const projection = this.buildCameraTransform()\n        const inverted = mat4.invert(projection, projection)\n        return vec2.transformMat4(vec2.create(), worldPoint, inverted)\n    }\n\n    /**\n     * From screen coordinates to world coordinates.\n     */\n    unproject(screenPoint: vec2): vec2 {\n        return vec2.transformMat4(vec2.create(), screenPoint, this.buildCameraTransform())\n    }\n\n    destroy() {\n        this.shaderManager.destroy();\n    }\n\n    private renderBufferToCanvas() {\n        const gl = this.shaderManager.gl;\n        gl.useProgram(this.emptyShader);\n\n        this.setupVertexShader(this.emptyShader);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        gl.bindTexture(gl.TEXTURE_2D, this.sourceBufferTexture);\n        gl.uniform1i(gl.getUniformLocation(this.emptyShader, 'image'), 0);\n\n        this.setDrawToCanvas();\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    private renderWalls() {\n        const gl = this.shaderManager.gl\n        gl.useProgram(this.wallShader)\n\n        this.setupVertexShader(this.wallShader);\n\n        const viewMatrix = this.buildViewTransform()\n        gl.uniformMatrix4fv(gl.getUniformLocation(this.wallShader, 'viewMatrix'), false, viewMatrix)\n\n        gl.uniform2f(\n            gl.getUniformLocation(this.wallShader, 'imageSize'),\n            this.bufferTextureSize.x,\n            this.bufferTextureSize.y\n        );\n\n        for (const wall of this.world!.walls.values()) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n            gl.bindTexture(gl.TEXTURE_2D, this.sourceBufferTexture);\n            gl.uniform1i(gl.getUniformLocation(this.wallShader, 'image'), 0);\n\n            gl.uniform2f(gl.getUniformLocation(this.wallShader, 'wall.a'), wall.a.x, wall.a.y);\n            gl.uniform2f(gl.getUniformLocation(this.wallShader, 'wall.b'), wall.b.x, wall.b.y);\n\n            this.setDrawToBufferTexture();\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n            this.swapBuffers();\n        }\n    }\n\n    private renderCells() {\n        if (!this.world)\n            return\n\n        const gl = this.shaderManager.gl;\n        gl.useProgram(this.cellShader);\n\n        this.setupVertexShader(this.cellShader);\n\n        gl.uniform1f(gl.getUniformLocation(this.cellShader, 'time'), (Date.now() - this.startTime)/1000);\n        const viewMatrix = this.buildViewTransform();\n        gl.uniformMatrix4fv(gl.getUniformLocation(this.cellShader, 'viewMatrix'), false, viewMatrix);\n\n        gl.uniform2f(\n            gl.getUniformLocation(this.cellShader, 'imageSize'),\n            this.bufferTextureSize.x,\n            this.bufferTextureSize.y\n        );\n\n        for (const cell of this.world!.cells.values()) {\n            const aabb = cell.aabb; // TODO scale by 2 to handle the bigger visual AABB\n            const [\n                [aabbMinX, aabbMinY],\n                [aabbMaxX, aabbMaxY]\n            ] = [\n                this.project([aabb.min.x, aabb.min.y]),\n                this.project([aabb.max.x, aabb.max.y])\n            ];\n            if (aabbMaxX < 0 || aabbMaxY < 0\n                || aabbMinX > gl.drawingBufferWidth\n                || aabbMinY > gl.drawingBufferHeight\n            ) continue;\n\n            const cellRgba = WorldRenderer.cellPigmentsToRgba(\n                cell.genome.cyanPigment,\n                cell.genome.magentaPigment,\n                cell.genome.yellowPigment,\n                cell.genome.whitePigment\n            )\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\n            gl.bindTexture(gl.TEXTURE_2D, this.sourceBufferTexture)\n            gl.uniform1i(gl.getUniformLocation(this.cellShader, 'image'), 0)\n\n            gl.uniform1i(gl.getUniformLocation(this.cellShader, 'cell.id'), cell.id);\n            gl.uniform2f(gl.getUniformLocation(this.cellShader, 'cell.center'), cell.center.x, cell.center.y);\n            gl.uniform2f(gl.getUniformLocation(this.cellShader, 'cell.speed'), cell.speed.x, cell.speed.y);\n            gl.uniform1f(gl.getUniformLocation(this.cellShader, 'cell.mass'), cell.mass);\n            gl.uniform1f(gl.getUniformLocation(this.cellShader, 'cell.angle'), cell.angle);\n            gl.uniform1f(gl.getUniformLocation(this.cellShader, 'cell.radius'), cell.radius);\n            gl.uniform4f(gl.getUniformLocation(this.cellShader, 'cell.bodyRgba'), ...cellRgba);\n\n            let obstaclesStruct: {\n                a: Vector2,\n                b: Vector2\n            }[] = [];\n\n            this.world.circleCast(cell.center, cell.radius).forEach(wo => {\n                if (wo instanceof Cell) {\n                    const intersections = Geometry.findCirclesIntersections(cell.center, cell.radius, wo.center, wo.radius);\n                    obstaclesStruct.push({\n                        a: intersections[0],\n                        b: intersections[1]\n                    });\n                } else if (wo instanceof Wall) {\n                    obstaclesStruct.push({\n                        a: wo.a,\n                        b: wo.b\n                    });\n                }\n            });\n\n            obstaclesStruct = obstaclesStruct.slice(0, 32);\n\n            obstaclesStruct.forEach((wall, index) => {\n                gl.uniform2f(gl.getUniformLocation(this.cellShader, `obstacles[${index}].a`), wall.a.x, wall.a.y);\n                gl.uniform2f(gl.getUniformLocation(this.cellShader, `obstacles[${index}].b`), wall.b.x, wall.b.y);\n            })\n            gl.uniform1i(gl.getUniformLocation(this.cellShader, 'obstaclesSize'), obstaclesStruct.length);\n\n            this.setDrawToBufferTexture();\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n            this.swapBuffers()\n        }\n    }\n\n    private setupVertexShader(shader: WebGLShader) {\n        const gl = this.shaderManager.gl\n        const vertexAttributeLoc = gl.getAttribLocation(shader, 'vertexPosition')\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.mainMesh)\n        gl.vertexAttribPointer(vertexAttributeLoc, 2, gl.FLOAT, false, 0, 0)\n        gl.enableVertexAttribArray(vertexAttributeLoc)\n        const textureCoordinateLoc = gl.getAttribLocation(shader, 'textureCoordinate')\n        gl.enableVertexAttribArray(textureCoordinateLoc)\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.drawBufferTextureUv)\n        gl.vertexAttribPointer(textureCoordinateLoc, 2, gl.FLOAT, false, 0, 0)\n    }\n\n    private renderBackground() {\n        if (!this.world)\n            return\n\n        const gl = this.shaderManager.gl\n        gl.useProgram(this.backgroundShader)\n\n        this.setupVertexShader(this.backgroundShader);\n\n        const viewMatrix = this.buildViewTransform()\n        gl.uniformMatrix4fv(gl.getUniformLocation(this.backgroundShader, 'viewMatrix'), false, viewMatrix)\n        gl.uniform1f(gl.getUniformLocation(this.backgroundShader, 'time'), (Date.now() - this.startTime)/1000)\n        gl.uniform2f(gl.getUniformLocation(this.backgroundShader, 'areaSize'), this.world.width, this.world.height)\n        gl.uniform1f(gl.getUniformLocation(this.backgroundShader, 'lightIntensity'), this.world.lightIntensity)\n\n        this.setDrawToBufferTexture();\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n\n        this.swapBuffers()\n    }\n\n    // TODO cache transform (maybe use separate Camera object)\n    private buildCameraTransform(): mat4 {\n        if (!this.world)\n            throw new Error(\"Can't build camera transform: the world state is not set in renderer!\")\n\n        const canvasWidth = this.shaderManager.gl.canvas.width\n        const canvasHeight = this.shaderManager.gl.canvas.height\n\n        const result = mat4.create()\n        const camera = this.world.camera\n        const scale = canvasHeight != 0 ? camera.height/canvasHeight : 1\n        mat4.scale(result, result, [scale, scale, 1])\n        mat4.translate(result, result, [camera.center.x/scale - canvasWidth/2, camera.center.y/scale - canvasHeight/2, 0])\n        return result\n    }\n\n    // TODO cache transform (maybe use separate Camera object)\n    private buildViewTransform(): mat4 {\n        const canvasHeight = this.shaderManager.gl.canvas.height\n\n        const result = this.buildCameraTransform()\n        mat4.scale(result, result, [1, -1, 1])\n        mat4.translate(result, result, [0, -canvasHeight, 0])\n        return result\n    }\n\n    private autoUpdateDrawBufferTexture() {\n        if (this.drawBufferTextureNeedsUpdate()) {\n            const gl = this.shaderManager.gl\n\n            gl.deleteTexture(this.sourceBufferTexture)\n            gl.deleteTexture(this.targetBufferTexture)\n\n            const width = this.shaderManager.gl.drawingBufferWidth\n            const height = this.shaderManager.gl.drawingBufferHeight\n\n            this.sourceBufferTexture = this.shaderManager.newTexture(width, height)\n            this.targetBufferTexture = this.shaderManager.newTexture(width, height)\n\n            this.bufferTextureSize = new Vector2(width, height)\n        }\n    }\n\n    private drawBufferTextureNeedsUpdate(): boolean {\n        return  this.bufferTextureSize.x != this.shaderManager.gl.drawingBufferWidth ||\n                this.bufferTextureSize.y != this.shaderManager.gl.drawingBufferHeight\n    }\n\n    private setDrawToBufferTexture() {\n        this.autoUpdateDrawBufferTexture();\n        const gl = this.shaderManager.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.targetBufferTexture, 0);\n    }\n\n    private setDrawToCanvas() {\n        const gl = this.shaderManager.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    private swapBuffers() {\n        const swap = this.sourceBufferTexture\n        this.sourceBufferTexture = this.targetBufferTexture\n        this.targetBufferTexture = swap\n    }\n\n    private createDrawBufferTextureUv() {\n        return this.shaderManager.newArrayBuffer([\n            1.0,  1.0,\n            0.0,  1.0,\n            1.0,  0.0,\n            0.0,  0.0,\n        ])\n    }\n\n    private createMainMesh(): WebGLBuffer {\n        return this.shaderManager.newArrayBuffer([\n            1.0, 1.0,\n            -1.0, 1.0,\n            1.0, -1.0,\n            -1.0, -1.0\n        ])\n    }\n\n    private static cellPigmentsToRgba(\n        cyan: number,\n        magenta: number,\n        yellow: number,\n        white: number\n    ): [number, number, number, number] {\n        const [r, g, b] = [1 - cyan, 1 - magenta, 1 - yellow]; // todo use white\n        const a = 1 - (1 - cyan) * (1 - magenta) * (1 - yellow) * (1 - white);\n        return [r, g, b, a];\n    }\n}\n","export default class WorldMouseEvent {\n    constructor(\n        public type: string,\n        public screenX: number,\n        public screenY: number,\n        public worldX: number,\n        public worldY: number\n    ) {}\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { withModifiers as _withModifiers, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"onTouchstart\", \"onTouchmove\", \"onTouchend\", \"onWheel\"]\n\nimport {ref, inject, onMounted, onBeforeUnmount} from 'vue';\nimport World from \"@/game/world/World\";\nimport WorldRenderer from \"@/render/WorldRenderer\";\nimport WorldMouseEvent from \"@/game/event/WorldMouseEvent\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WorldViewer',\n  setup(__props, { emit }: { emit: ({(e: string, payload: WorldMouseEvent): void}), expose: any, slots: any, attrs: any }) {\n\nconst SCROLL_SENSITIVITY = 0.005\n\nconst canvasRef = ref<HTMLCanvasElement>()\nconst containerRef = ref<HTMLDivElement>()\n\n\n\nlet world: World = inject('world')!\nlet canvas: HTMLCanvasElement\nlet container: HTMLDivElement\nlet renderer: WorldRenderer\n\nlet canvasSizeObserver: ResizeObserver;\nlet animationFrameRequest: number;\n\nconst dragging = {\n  dragMode: false,\n  lastMouseWorldPoint: [0, 0]\n}\n\nonMounted(() => {\n  canvas = canvasRef.value!\n  container = containerRef.value!\n  renderer = WorldRenderer.init(canvas, world);\n  canvasSizeObserver = new ResizeObserver(onCanvasResize);\n  canvasSizeObserver.observe(canvas);\n  renderingRoutine();\n});\n\nonBeforeUnmount(() => {\n  canvasSizeObserver.disconnect();\n  window.cancelAnimationFrame(animationFrameRequest);\n  renderer.destroy()\n});\n\nfunction onWheel(event: WheelEvent) {\n  const camera = world.camera\n  if (event.deltaY > 0)\n    camera.height *= 1 + event.deltaY*SCROLL_SENSITIVITY\n  else\n    camera.height *= 1/(1 - event.deltaY*SCROLL_SENSITIVITY)\n  if (camera.height < 1)\n    camera.height = 1\n}\n\nfunction onTouchEvent(event: TouchEvent) {\n  if (event.touches.length == 1) {\n    let mouseEventType: string | undefined\n    switch (event.type) {\n      case 'touchstart': mouseEventType = 'mousedown'; break;\n      case 'touchmove': mouseEventType = 'mousemove'; break;\n      case 'touchend': mouseEventType = 'mouseup'; break;\n    }\n    if (mouseEventType) {\n      const { clientX: x, clientY: y } = event.touches[0]\n      const dps = window.devicePixelRatio\n      const [ screenX, screenY ] = [x * dps, y * dps]\n      let [ worldX, worldY ] = renderer.unproject([screenX, screenY])\n      const worldEvent = new WorldMouseEvent(`world-${mouseEventType}`, screenX, screenY, worldX, worldY)\n      handleDraggingEvent(worldEvent)\n      emit(worldEvent.type, worldEvent)\n    }\n  }\n}\n\nfunction onMouseEvent(event: MouseEvent) {\n  const dps = window.devicePixelRatio\n  const [ screenX, screenY ] = [event.x * dps, event.y * dps]\n  let [ worldX, worldY ] = renderer.unproject([screenX, screenY])\n\n  const worldEvent = new WorldMouseEvent(`world-${event.type}`, screenX, screenY, worldX, worldY)\n  handleDraggingEvent(worldEvent)\n  emit(worldEvent.type, worldEvent)\n}\n\nfunction handleDraggingEvent(event: WorldMouseEvent) {\n  if (event.type === 'world-mousedown') {\n    dragging.dragMode = true\n    dragging.lastMouseWorldPoint = [ event.worldX, event.worldY ]\n  }\n\n  if (event.type === 'world-mousemove' && dragging.dragMode) {\n    const [ prevX, prevY ] = dragging.lastMouseWorldPoint\n    world.camera.center.x += prevX - event.worldX\n    world.camera.center.y += prevY - event.worldY;\n    [ event.worldX, event.worldY ] = renderer.unproject([event.screenX, event.screenY])\n    dragging.lastMouseWorldPoint = [ event.worldX, event.worldY ]\n  }\n\n  if (event.type === 'world-mouseup' || event.type === 'world-mouseleave')\n    dragging.dragMode = false\n}\n\nfunction renderingRoutine() {\n  renderer.render()\n  animationFrameRequest = window.requestAnimationFrame(renderingRoutine)\n}\n\nfunction onCanvasResize() {\n  const dpr = window.devicePixelRatio;\n  const { width, height } = container.getBoundingClientRect();\n  canvas.width = Math.round(width * dpr);\n  canvas.height = Math.round(height * dpr);\n  renderer.render()\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"c-world-viewer\",\n    ref_key: \"containerRef\",\n    ref: containerRef\n  }, [\n    _createElementVNode(\"canvas\", {\n      class: \"canvas\",\n      ref_key: \"canvasRef\",\n      ref: canvasRef,\n      onClick: onMouseEvent,\n      onMousedown: onMouseEvent,\n      onMouseup: onMouseEvent,\n      onMousemove: onMouseEvent,\n      onMouseleave: onMouseEvent,\n      onTouchstart: _withModifiers(onTouchEvent, [\"prevent\"]),\n      onTouchmove: _withModifiers(onTouchEvent, [\"prevent\"]),\n      onTouchend: _withModifiers(onTouchEvent, [\"prevent\"]),\n      onWheel: _withModifiers(onWheel, [\"prevent\"])\n    }, null, 40, _hoisted_1)\n  ], 512))\n}\n}\n\n})","import script from \"./WorldViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WorldViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WorldViewer.vue?vue&type=style&index=0&id=2fc08934&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderSlot as _renderSlot, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"c-tabbed-panel\" }\nconst _hoisted_2 = { class: \"tabs\" }\nconst _hoisted_3 = { class: \"body\" }\n\nimport { ref, provide } from 'vue'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PropertiesTabbedPanel',\n  setup(__props) {\n\nconst activeTabName = ref<string | null>(null)\nconst minWidth = 320\n\nlet dragStartX = 0\nconst oldWidth = ref(300)\nconst width = ref(oldWidth.value)\n\nprovide('activeTabName', activeTabName)\n\nfunction onHandleDragStart(event: DragEvent) {\n  dragStartX = event.clientX\n  initHandleDragging()\n}\n\nfunction initHandleDragging() {\n  window.addEventListener('mousemove', onHandleDrag);\n  window.addEventListener('mouseleave', stopHandleDragging);\n  window.addEventListener('mouseup', stopHandleDragging);\n}\n\nfunction onHandleDrag(event: MouseEvent) {\n  if (event.screenX === 0)\n    return\n  let offset = dragStartX - event.clientX\n  width.value = oldWidth.value + offset\n  if (width.value < minWidth)\n    width.value = minWidth\n}\n\nfunction stopHandleDragging() {\n  oldWidth.value = width.value\n  window.removeEventListener('mousemove', onHandleDrag);\n  window.removeEventListener('mouseleave', stopHandleDragging);\n  window.removeEventListener('mouseup', stopHandleDragging);\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      class: \"tabbed-panel\",\n      draggable: \"false\",\n      style: _normalizeStyle({ width: `${width.value}px`, minWidth: `${minWidth}px` })\n    }, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _renderSlot(_ctx.$slots, \"tabs\")\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _renderSlot(_ctx.$slots, \"bodies\"),\n        _createElementVNode(\"div\", {\n          class: \"resize-handle\",\n          onMousedown: onHandleDragStart\n        }, null, 32)\n      ])\n    ], 4)\n  ]))\n}\n}\n\n})","import script from \"./PropertiesTabbedPanel.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PropertiesTabbedPanel.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./PropertiesTabbedPanel.vue?vue&type=style&index=0&id=ca817e26&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { useCssVars as _useCssVars, unref as _unref, defineComponent as _defineComponent } from 'vue'\nimport { renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"disabled\"]\n\nimport {computed} from \"vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HudButton',\n  props: {\n    active: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    borderRadius: { default: \"4px\" },\n    borderWidth: { default: \"1px\" }\n  },\n  setup(__props: any) {\n\nconst props = __props as { active: boolean, disabled: boolean, borderRadius: string, borderWidth: string };\n\n_useCssVars(_ctx => ({\n  \"70e98800\": (_unref(defaultsSupportingBorderRadius)),\n  \"69d2b898\": (_unref(defaultsSupportingBorderWidth))\n}))\n\n\n\nlet defaultsSupportingBorderRadius = computed(() => props.borderRadius.replaceAll('default', \"4px\"))\nlet defaultsSupportingBorderWidth = computed(() => props.borderWidth.replaceAll('default', \"1px\"))\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"button\", {\n    class: _normalizeClass([\"c-button\", { active: __props.active }]),\n    disabled: __props.disabled\n  }, [\n    _renderSlot(_ctx.$slots, \"default\")\n  ], 10, _hoisted_1))\n}\n}\n\n})","import script from \"./HudButton.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HudButton.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./HudButton.vue?vue&type=style&index=0&id=0ab01900&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderSlot as _renderSlot, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { inject, Ref } from 'vue'\nimport HudButton from \"@/component/HudButton.vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PropertiesTab',\n  props: ['name'],\n  setup(__props) {\n\nconst props = __props;\n\n\nconst activeTabName = inject('activeTabName') as Ref<string | null>\n\nfunction onClick() {\n  if (activeTabName.value == props.name)\n    activeTabName.value = null\n  else\n    activeTabName.value = props.name\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(HudButton, {\n    class: \"c-properties-tab\",\n    active: _unref(activeTabName) === __props.name,\n    onClick: onClick\n  }, {\n    default: _withCtx(() => [\n      _renderSlot(_ctx.$slots, \"default\")\n    ]),\n    _: 3\n  }, 8, [\"active\"]))\n}\n}\n\n})","import script from \"./PropertiesTab.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PropertiesTab.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./PropertiesTab.vue?vue&type=style&index=0&id=8da2aa86&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"body-wr\"\n}\n\nimport { inject, ref } from 'vue'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PropertiesTabBody',\n  props: ['name'],\n  setup(__props) {\n\nconst props = __props;\n\n\nconst activeTabName = inject('activeTabName', ref(null))\n\nreturn (_ctx: any,_cache: any) => {\n  return (_unref(activeTabName) === props.name)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _renderSlot(_ctx.$slots, \"default\")\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","import script from \"./PropertiesTabBody.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PropertiesTabBody.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-22faf50d\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"section-wr\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"section-title\"\n}\nconst _hoisted_3 = { class: \"section-content\" }\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PropertiesSection',\n  props: ['title'],\n  setup(__props) {\n\nconst props = __props;\n\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (props.title)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(props.title), 1))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _renderSlot(_ctx.$slots, \"default\")\n    ])\n  ]))\n}\n}\n\n})","import script from \"./PropertiesSection.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PropertiesSection.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./PropertiesSection.vue?vue&type=style&index=0&id=22faf50d&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/davdav2/Desktop/cybercells/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-22faf50d\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-39e8fa0e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"c-number-slider\" }\nconst _hoisted_2 = [\"disabled\", \"min\", \"max\", \"step\"]\n\nimport { ref, watch } from \"vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'NumberSlider',\n  props: {\n    min: null,\n    max: null,\n    step: null,\n    disabled: { type: Boolean },\n    modelValue: null\n  },\n  emits: ['update:modelValue'],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n  min?: number,\n  max?: number,\n  step?: number,\n  disabled?: boolean,\n  modelValue?: number\n};\n\n\n\n\nconst value = ref<number>(props.modelValue || 0)\n\nwatch(props, () => {\n  if (props.modelValue != null)\n    value.value = props.modelValue\n})\n\nwatch(value, () => {\n  emit(\"update:modelValue\", value.value)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _withDirectives(_createElementVNode(\"input\", {\n      class: \"input\",\n      type: \"range\",\n      disabled: __props.disabled,\n      min: __props.min,\n      max: __props.max,\n      step: __props.step,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((value).value = $event))\n    }, null, 8, _hoisted_2), [\n      [_vModelText, value.value]\n    ])\n  ]))\n}\n}\n\n})","import script from \"./NumberSlider.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./NumberSlider.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./NumberSlider.vue?vue&type=style&index=0&id=39e8fa0e&scoped=true&lang=scss\"\n\nimport exportComponent from \"/Users/davdav2/Desktop/cybercells/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39e8fa0e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, vModelText as _vModelText, unref as _unref, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"c-slider-with-number-input\" }\nconst _hoisted_2 = { class: \"slider-with-number-input\" }\nconst _hoisted_3 = [\"disabled\"]\n\nimport {Ref, ref, watch} from \"vue\";\nimport Slider from \"@/component/input/NumberSlider.vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'SliderWithNumberInput',\n  props: {\n    min: null,\n    max: null,\n    step: null,\n    disabled: { type: Boolean },\n    modelValue: null\n  },\n  emits: ['update:modelValue'],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n  min?: number,\n  max?: number,\n  step?: number,\n  disabled?: boolean,\n  modelValue?: number\n};\n\n\n\nconst textInput = ref<HTMLInputElement>() as Ref<HTMLInputElement>\nconst value = ref<number>(props.modelValue || 0)\n\nwatch(props, () => {\n  if (props.modelValue != null)\n    value.value = props.modelValue\n})\n\nwatch(value, () => {\n  emit(\"update:modelValue\", value.value)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(Slider, {\n        class: \"slider\",\n        min: __props.min,\n        max: __props.max,\n        step: __props.step,\n        disabled: __props.disabled,\n        modelValue: value.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((value).value = $event)),\n        modelModifiers: { number: true }\n      }, null, 8, [\"min\", \"max\", \"step\", \"disabled\", \"modelValue\"]),\n      _withDirectives(_createElementVNode(\"input\", {\n        class: \"text-input\",\n        type: \"text\",\n        ref_key: \"textInput\",\n        ref: textInput,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((value).value = $event)),\n        disabled: __props.disabled,\n        onFocus: _cache[2] || (_cache[2] = ($event: any) => (_unref(textInput).select())),\n        onKeydown: [\n          _cache[3] || (_cache[3] = _withKeys(($event: any) => (_unref(textInput).blur()), [\"enter\"])),\n          _cache[4] || (_cache[4] = _withKeys(($event: any) => (_unref(textInput).blur()), [\"esc\"]))\n        ]\n      }, null, 40, _hoisted_3), [\n        [\n          _vModelText,\n          value.value,\n          void 0,\n          { number: true }\n        ]\n      ])\n    ])\n  ]))\n}\n}\n\n})","import script from \"./SliderWithNumberInput.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SliderWithNumberInput.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SliderWithNumberInput.vue?vue&type=style&index=0&id=52c2a261&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"c-input-label\"><slot/></div>\n</template>\n\n<style>\n.c-input-label {\n  color: var(--properties-input-label-color);\n  font-size: 0.8em;\n  margin-bottom: 1px;\n  cursor: default;\n}\n</style>","import { render } from \"./InputLabel.vue?vue&type=template&id=99afd250\"\nconst script = {}\n\nimport \"./InputLabel.vue?vue&type=style&index=0&id=99afd250&lang=css\"\n\nimport exportComponent from \"/Users/davdav2/Desktop/cybercells/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { inject } from \"vue\";\n\nimport World from \"@/game/world/World\";\n\nimport PropertiesSection from \"@/component/properties/PropertiesSection.vue\";\nimport SliderWithNumberInput from \"@/component/input/SliderWithNumberInput.vue\";\nimport InputLabel from \"@/component/input/InputLabel.vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WorldSettings',\n  setup(__props) {\n\nconst world = inject('world') as World;\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(PropertiesSection, {\n    class: \"c-world-settings-tab-body\",\n    title: \"World settings\"\n  }, {\n    default: _withCtx(() => [\n      _createVNode(InputLabel, null, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Gravity\")\n        ]),\n        _: 1\n      }),\n      _createVNode(SliderWithNumberInput, {\n        class: \"slider-input\",\n        min: -5,\n        max: 5,\n        step: 0.01,\n        modelValue: _unref(world).gravity.y,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_unref(world).gravity.y) = $event)),\n        modelModifiers: { number: true }\n      }, null, 8, [\"step\", \"modelValue\"]),\n      _createVNode(InputLabel, null, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Density\")\n        ]),\n        _: 1\n      }),\n      _createVNode(SliderWithNumberInput, {\n        class: \"slider-input\",\n        min: 0,\n        max: 1.5,\n        step: 0.01,\n        modelValue: _unref(world).density,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_unref(world).density) = $event)),\n        modelModifiers: { number: true },\n        disabled: true\n      }, null, 8, [\"max\", \"step\", \"modelValue\"]),\n      _createVNode(InputLabel, null, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Viscosity\")\n        ]),\n        _: 1\n      }),\n      _createVNode(SliderWithNumberInput, {\n        class: \"slider-input\",\n        min: 0,\n        max: 0.8,\n        step: 0.01,\n        modelValue: _unref(world).viscosity,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_unref(world).viscosity) = $event)),\n        modelModifiers: { number: true }\n      }, null, 8, [\"max\", \"step\", \"modelValue\"]),\n      _createVNode(InputLabel, null, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Light intensity\")\n        ]),\n        _: 1\n      }),\n      _createVNode(SliderWithNumberInput, {\n        class: \"slider-input\",\n        min: 0,\n        max: 0.8,\n        step: 0.01,\n        modelValue: _unref(world).lightIntensity,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_unref(world).lightIntensity) = $event)),\n        modelModifiers: { number: true },\n        disabled: true\n      }, null, 8, [\"max\", \"step\", \"modelValue\"])\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./WorldSettings.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WorldSettings.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WorldSettings.vue?vue&type=style&index=0&id=4e2775a8&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","enum CellType {\n    PHAGOCYTE,\n    FLAGELLOCYTE\n}\n\nexport default CellType","import Vector2 from \"@/geom/Vector2\";\n\nexport default class Food implements WorldObject {\n    static FOOD_DENSITY = 4\n\n    id = -1\n\n    constructor(\n        public center: Vector2,\n        public mass: number\n    ) {}\n\n\n    get radius() {\n        return Math.sqrt(this.mass/Math.PI) / Food.FOOD_DENSITY\n    }\n}","import CellType from \"@/game/CellType\";\n\nexport default class Genome {\n    private constructor(\n        public type: CellType = CellType.FLAGELLOCYTE,\n        public cyanPigment: number = 0,\n        public magentaPigment: number = 0,\n        public yellowPigment: number = 0,\n        public whitePigment: number = 0,\n        public hardness: number = 0,\n        public splitMass: number = 0,\n        public splitAngle: number = 0,\n        public child1Angle: number = 0,\n        public child2Angle: number = 0,\n        public stickOnSplit: boolean = false,\n        public child1KeepConnections: boolean = false,\n        public child2KeepConnections: boolean = false,\n        public nutritionPriority: number = 0,\n    ) {}\n\n    flagellumForce: number = 8;\n\n    children: [Genome, Genome] = [this, this];\n\n    deepCopy = this.copyRecursive\n\n    applyRadiationLocally() {\n        // TODO\n    }\n\n    static newNullGenome(): Genome {\n        return new Genome();\n    }\n\n    static newSampleGenome(): Genome {\n        const result = new Genome();\n        result.type = CellType.FLAGELLOCYTE;\n        result.hardness = 0.6;\n        result.splitMass = 350;\n        result.child1KeepConnections = true;\n        result.child2KeepConnections = true;\n        result.nutritionPriority = 1;\n        [result.cyanPigment, result.magentaPigment, result.yellowPigment, result.whitePigment] = this.getRandomCellPigments();\n        return result\n    }\n\n    private static getRandomCellPigments(): [number, number, number, number] {\n        const cmyw: [number, number, number, number] = [\n            Math.round(Math.random()/2*100)/100,\n            Math.round(Math.random()*100)/100,\n            0,\n            0\n        ];\n        for (let i = 0; i < cmyw.length; i++) {\n            const randomIndex = Math.floor(Math.random() * cmyw.length);\n            [cmyw[i], cmyw[randomIndex]] = [cmyw[randomIndex], cmyw[i]];\n        }\n        return cmyw\n    }\n\n    private copyRecursive(copies: Map<Genome, Genome> = new Map().set(null, null)): Genome {\n        const result = new Genome()\n        result.type = this.type\n        result.cyanPigment = this.cyanPigment\n        result.magentaPigment = this.magentaPigment\n        result.yellowPigment = this.yellowPigment\n        result.whitePigment = this.whitePigment\n        result.hardness = this.hardness\n        result.splitMass = this.splitMass\n        result.splitAngle = this.splitAngle\n        result.child1Angle = this.child1Angle\n        result.child2Angle = this.child2Angle\n        result.stickOnSplit = this.stickOnSplit\n        result.child1KeepConnections = this.child1KeepConnections\n        result.child2KeepConnections = this.child2KeepConnections\n        result.nutritionPriority = this.nutritionPriority\n        result.flagellumForce = this.flagellumForce\n        copies.set(this, result)\n\n        result.children = [\n            copies.has(this.children[0]) ? copies.get(this.children[0])! : this.children[0].copyRecursive(copies),\n            copies.has(this.children[1]) ? copies.get(this.children[1])! : this.children[1].copyRecursive(copies)\n        ]\n\n        return result\n    }\n\n    private findAllGenomes(): Set<Genome> {\n        const stash = new Array<Genome>()\n        const result = new Set<Genome>()\n        while (stash.length != 0) {\n            stash.pop()!!.children.forEach((element: Genome) => {\n                if (!result.has(element)) {\n                    stash.push(element)\n                    result.add(element)\n                }\n            });\n        }\n        return result\n    }\n\n    private applyRadiationRecursive() {\n        // TODO\n    }\n}","import Vector2 from \"@/geom/Vector2\";\n\nexport default class Camera {\n    constructor(\n        public center: Vector2,\n        public height: number\n    ) {}\n\n    static NULL = new Camera(new Vector2(), 0)\n}","import Vector2 from \"@/geom/Vector2\";\nimport Food from \"@/game/world/object/Food\";\nimport Cell from \"@/game/world/object/Cell\";\nimport Wall from \"@/game/world/object/Wall\";\nimport Genome from \"@/game/Genome\";\nimport Camera from \"@/game/Camera\";\nimport Geometry from \"@/geom/Geometry\";\n\nexport default class World {\n    constructor(\n        public width: number,\n        public height: number,\n        public gravity: Vector2,\n        public density: number,\n        public viscosity: number,\n        public radiation: number,\n        public lightIntensity: number,\n        public camera: Camera = Camera.NULL\n    ) {}\n\n    public food: Map<number, Food> = new Map()\n    public cells: Map<number, Cell> = new Map()\n    public walls: Map<number, Wall> = new Map()\n\n    private idCounter = 0;\n\n    public newId() {\n        return this.idCounter++;\n    }\n\n    public add(object: WorldObject) {\n        if (object.id == -1)\n            object.id = this.newId();\n\n        if (object instanceof Cell)\n            this.cells.set(object.id, object);\n        if (object instanceof Food)\n            this.food.set(object.id, object);\n        if (object instanceof Wall)\n            this.walls.set(object.id, object);\n    }\n\n    public remove(object: WorldObject) {\n        this.cells.delete(object.id);\n        this.food.delete(object.id);\n        this.walls.delete(object.id);\n\n        if (object instanceof Cell) {\n            for (const id of object.connections.keys()) {\n                this.cells.get(id)?.connections.delete(object.id);\n            }\n        }\n    }\n\n    public getLightIntensityAtPoint(point: Vector2) {\n        // TODO in future\n    }\n\n    public getRadiationIntensityAtPoint(point: Vector2) {\n        // TODO in future\n    }\n\n    // TODO use K-d tree (maybe with a separate managing object)\n    // TODO return intersection points\n    rayCast(a: Vector2, b: Vector2): WorldObject[] {\n        const result: WorldObject[] = [];\n\n        for (const it of this.walls.values()) {\n            if (Geometry.findLinesIntersection([it.a, it.b], [a, b]))\n                result.push(it);\n        }\n\n        for (const it of this.cells.values()) {\n            if (Geometry.findLineAndCircleIntersections(it.center, it.radius, a, b).length != 0)\n                result.push(it);\n        }\n\n        for (const it of this.food.values()) {\n            if (Geometry.findLineAndCircleIntersections(it.center, it.radius, a, b).length != 0)\n                result.push(it);\n        }\n\n        return result;\n    }\n\n    // TODO use K-d Tree (maybe with a separate managing object)\n    // TODO return intersection points\n    circleCast(center: Vector2, radius: number): WorldObject[] {\n        const result: WorldObject[] = [];\n\n        for (const it of this.walls.values()) {\n            if (Geometry.findLineAndCircleIntersections(center, radius, it.a, it.b).length != 0)\n                result.push(it);\n        }\n\n        for (const it of this.cells.values()) {\n            if (Geometry.findCirclesIntersections(center, radius, it.center, it.radius).length != 0)\n                result.push(it);\n        }\n\n        for (const it of this.food.values()) {\n            if (Geometry.findCirclesIntersections(center, radius, it.center, it.radius).length != 0)\n                result.push(it);\n        }\n\n        return result;\n    }\n\n    static getDefault() {\n        return new World(0, 0, new Vector2(), 0, 0, 0, 0)\n    }\n\n    static TEMPORARY_DEBUG = (() => {\n        const world = new World(800, 600, new Vector2(0, 4), 0, 0.2, 0, 0, new Camera(new Vector2(0, 0), 800));\n        for (let i = 0; i < 50; i++) {\n            world.add(new Cell(new Vector2(50 + Math.random()*(world.width - 100), 50 + Math.random()*200), new Vector2(), 400, 0, 0, Genome.newSampleGenome()));\n        }\n        world.add(new Wall(new Vector2(0, 0), new Vector2(0, world.height)));\n        world.add(new Wall(new Vector2(0, world.height), new Vector2(world.width, world.height)));\n        world.add(new Wall(new Vector2(world.width, world.height), new Vector2(world.width, 0)));\n        world.add(new Wall(new Vector2(world.width, 0), new Vector2(0, 0)));\n        return world;\n    })()\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"c-cell-genome-preview\" }\n\nimport Genome from \"@/game/Genome\";\nimport WorldRenderer from \"@/render/WorldRenderer\";\nimport {onBeforeUnmount, onMounted, Ref, ref, watch} from \"vue\";\nimport World from \"@/game/world/World\";\nimport Vector2 from \"@/geom/Vector2\";\nimport Camera from \"@/game/Camera\";\nimport Cell from \"@/game/world/object/Cell\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CellGenomePreview',\n  props: {\n    genome: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {\n  genome: Genome | null\n};\n\n\n\nconst canvas = ref() as Ref<HTMLCanvasElement>;\nlet canvasSizeObserver: ResizeObserver\nlet renderer: WorldRenderer\n\nonMounted(() => {\n  renderer = WorldRenderer.init(canvas.value)\n  renderer.config.layers.background = false\n  canvasSizeObserver = new ResizeObserver(onCanvasResize)\n  canvasSizeObserver.observe(canvas.value)\n  updateRendererDummyWorld()\n  renderer.render()\n})\n\nonBeforeUnmount(() => {\n  canvasSizeObserver.disconnect();\n  renderer.destroy();\n})\n\nwatch(props, () => {\n  updateRendererDummyWorld()\n  renderer.render()\n})\n\nfunction updateRendererDummyWorld() {\n  const dummyWorld = World.getDefault()\n  if (props.genome) {\n    const dummyCell = new Cell(new Vector2(), new Vector2(), 300, Math.PI/4, 0, props.genome)\n    dummyWorld.cells.set(0, dummyCell)\n    dummyWorld.camera = new Camera(new Vector2(), dummyCell.radius * 3)\n  }\n  renderer.world = dummyWorld\n}\n\nfunction onCanvasResize() {\n  const dpr = window.devicePixelRatio;\n  const { width, height } = canvas.value.getBoundingClientRect();\n  canvas.value.width = Math.round(width * dpr);\n  canvas.value.height = Math.round(height * dpr);\n  renderer.render()\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"canvas\", {\n      class: \"canvas\",\n      ref_key: \"canvas\",\n      ref: canvas\n    }, null, 512)\n  ]))\n}\n}\n\n})","import script from \"./CellGenomePreview.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CellGenomePreview.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./CellGenomePreview.vue?vue&type=style&index=0&id=17c78613&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, unref as _unref, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vShow as _vShow, normalizeClass as _normalizeClass, resolveDirective as _resolveDirective } from \"vue\"\n\nconst _hoisted_1 = { class: \"c-genome-selector\" }\nconst _hoisted_2 = { class: \"select-head\" }\nconst _hoisted_3 = [\"onKeydown\"]\nconst _hoisted_4 = { class: \"dropdown\" }\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = { class: \"dropdown-item__preview-wr\" }\nconst _hoisted_7 = { class: \"dropdown-item__name\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item__controls\" }, null, -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"new-item-button\" }, null, -1)\n\nimport {computed, ref, watch} from \"vue\";\nimport GenomeLibrary, {GenomeLibraryEntry} from \"@/game/GenomeLibrary\";\nimport InputLabel from \"@/component/input/InputLabel.vue\";\nimport CellGenomePreview from \"@/component/genome/CellGenomePreview.vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GenomeSelector',\n  props: {\n    library: null,\n    modelValue: null\n  },\n  emits: ['update:modelValue'],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n  library: GenomeLibrary,\n  modelValue?: GenomeLibraryEntry\n};\n\n\n\n\nconst nameInput = ref(props.modelValue ? props.modelValue.name : \"\")\nconst dropdownOpened = ref(false)\nconst value = ref<GenomeLibraryEntry | null>(null)\n\nconst libraryEntriesFiltered = computed(() => {\n  if (value.value && nameInput.value === value.value.name)\n    return props.library.entries\n  else\n    return props.library.search(nameInput.value)\n})\n\nwatch(value, () => {\n  emit('update:modelValue', value.value)\n  resetNameInput();\n})\n\nwatch(props, () => {\n  if (props.modelValue)\n    value.value = props.modelValue\n  resetNameInput();\n})\n\nfunction onInputFocus(e: InputEvent) {\n  dropdownOpened.value = true;\n  const input = e.target as HTMLInputElement;\n  input.select()\n}\n\nfunction select(item: GenomeLibraryEntry) {\n  value.value = item\n  dropdownOpened.value = false;\n}\n\nfunction cancelSelection() {\n  dropdownOpened.value = false\n  resetNameInput();\n}\n\nfunction resetNameInput() {\n  if (value.value == null)\n    nameInput.value = '';\n  else\n    nameInput.value = value.value.name\n}\n\nreturn (_ctx: any,_cache: any) => {\n  const _directive_click_outside = _resolveDirective(\"click-outside\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass({ 'dropdown-opened': dropdownOpened.value })\n    }, [\n      _createVNode(InputLabel, null, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Genome to edit\")\n        ]),\n        _: 1\n      }),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (value.value)\n          ? (_openBlock(), _createBlock(CellGenomePreview, {\n              key: 0,\n              class: \"select-head__preview\",\n              genome: __props.modelValue?.genome\n            }, null, 8, [\"genome\"]))\n          : _createCommentVNode(\"\", true),\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"select-head__name-input\",\n          placeholder: \"Select genome\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((nameInput).value = $event)),\n          onFocus: onInputFocus,\n          onKeydown: _withKeys(cancelSelection, [\"esc\"])\n        }, null, 40, _hoisted_3), [\n          [_vModelText, nameInput.value]\n        ]),\n        _createElementVNode(\"button\", {\n          class: \"select-head__dropdown-trigger\",\n          onClick: _cache[1] || (_cache[1] = ($event: any) => (dropdownOpened.value = !dropdownOpened.value))\n        })\n      ]),\n      _withDirectives(_createElementVNode(\"div\", _hoisted_4, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(libraryEntriesFiltered), (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"dropdown-item\",\n            key: item.name,\n            onClick: () => select(item)\n          }, [\n            _createElementVNode(\"div\", _hoisted_6, [\n              _createVNode(CellGenomePreview, {\n                class: \"dropdown-item__preview\",\n                genome: item.genome\n              }, null, 8, [\"genome\"])\n            ]),\n            _createElementVNode(\"div\", _hoisted_7, _toDisplayString(item.name), 1),\n            _hoisted_8\n          ], 8, _hoisted_5))\n        }), 128)),\n        _hoisted_9\n      ], 512), [\n        [_vShow, dropdownOpened.value]\n      ])\n    ], 2)), [\n      [_directive_click_outside, cancelSelection]\n    ])\n  ]))\n}\n}\n\n})","import script from \"./GenomeSelector.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GenomeSelector.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GenomeSelector.vue?vue&type=style&index=0&id=32df403e&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"c-properties-subheader\">\n    <span class=\"text\">\n      <slot/>\n    </span>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.c-properties-subheader {\n  text-align: center;\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n  margin-bottom: 5px;\n\n  &:before, &:after {\n    content: '';\n    border-bottom: 1px solid grey;\n    height: 0;\n    flex: 1;\n  }\n\n  .text {\n    color: rgb(190, 190, 190);\n    text-transform: uppercase;\n    font-size: 0.8em;\n    margin: 0 10px;\n  }\n}\n</style>","import { render } from \"./PropertiesSubheader.vue?vue&type=template&id=8c428008\"\nconst script = {}\n\nimport \"./PropertiesSubheader.vue?vue&type=style&index=0&id=8c428008&lang=scss\"\n\nimport exportComponent from \"/Users/davdav2/Desktop/cybercells/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"c-genome-pigment-color-droplet-icon\" }\n\nimport {onBeforeUnmount, onMounted, Ref, ref, watch} from \"vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GenomePigmentColorDropletIcon',\n  props: {\n  color: {\n    type: String,\n    default: \"white\"\n  },\n  value: {\n    type: Number,\n    default: 1\n  }\n},\n  setup(__props) {\n\nconst props = __props;\n\nconst canvasRef = ref() as Ref<HTMLCanvasElement>;\nlet canvasCtx: CanvasRenderingContext2D | null = null\nlet canvasSizeObserver: ResizeObserver\n\n\n\nwatch(props, drawDroplet);\n\nonMounted(startObservingCanvasSizeChange);\nonBeforeUnmount(stopObservingCanvasSizeChange)\n\nfunction startObservingCanvasSizeChange() {\n  canvasSizeObserver = new ResizeObserver(onCanvasResize)\n  canvasSizeObserver.observe(canvasRef.value);\n}\n\nfunction stopObservingCanvasSizeChange() {\n  canvasSizeObserver.disconnect();\n}\n\nfunction onCanvasResize() {\n  const canvas = canvasRef.value\n  const dpr = window.devicePixelRatio;\n  const { width, height } = canvas.getBoundingClientRect();\n  canvas.width = Math.round(width * dpr);\n  canvas.height = Math.round(height * dpr);\n  drawDroplet();\n}\n\nfunction drawDroplet() {\n  const canvas = canvasRef.value;\n  const { width: w, height: h } = canvas;\n  canvasCtx = canvasCtx || canvas.getContext('2d')!;\n  const gradient = canvasCtx.createLinearGradient(0.5 * w, 0.2 * h, 0.5 * w, 0.85 * h);\n  const clippedValue = Math.min(1, Math.max(0, props.value));\n  gradient.addColorStop(0, \"transparent\");\n  gradient.addColorStop(1 - clippedValue, \"transparent\");\n  gradient.addColorStop(1 - clippedValue, props.color);\n  gradient.addColorStop(1, props.color);\n  canvasCtx.clearRect(0, 0, w, h);\n  canvasCtx.strokeStyle = props.color;\n  canvasCtx.fillStyle = gradient;\n  canvasCtx.lineWidth = 2;\n  canvasCtx.beginPath();\n  canvasCtx.moveTo(0.5 * w, 0.2 * h);\n  canvasCtx.lineTo(0.75 * w, 0.6 * h);\n  canvasCtx.arc(0.5 * w, 0.6 * h, 0.25 * w, 0, Math.PI);\n  canvasCtx.lineTo(0.5 * w, 0.2 * h);\n  canvasCtx.stroke();\n  canvasCtx.fill();\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"canvas\", {\n      class: \"canvas\",\n      ref_key: \"canvasRef\",\n      ref: canvasRef\n    }, null, 512)\n  ]))\n}\n}\n\n})","import script from \"./GenomePigmentColorDropletIcon.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GenomePigmentColorDropletIcon.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GenomePigmentColorDropletIcon.vue?vue&type=style&index=0&id=374333ae&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, unref as _unref, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"c-genome-pigments-editor\" }\nconst _hoisted_2 = { class: \"pigments-view\" }\n\nimport InputLabel from \"@/component/input/InputLabel.vue\";\nimport {computed, inject, Ref} from \"vue\";\nimport SliderWithNumberInput from \"@/component/input/SliderWithNumberInput.vue\";\nimport GenomePigmentColorDropletIcon from \"@/component/genome/GenomePigmentColorDropletIcon.vue\";\nimport Genome from \"@/game/Genome\";\nimport {GenomeLibraryEntry} from \"@/game/GenomeLibrary\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GenomePigmentsEditor',\n  setup(__props) {\n\nconst selectedGenomeEntry = inject('selectedGenomeEntry') as Ref<GenomeLibraryEntry | null>\nconst genome: Ref<Genome> = computed(() =>\n    selectedGenomeEntry.value ? selectedGenomeEntry.value!.genome : Genome.newNullGenome()\n)\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(InputLabel, { class: \"label\" }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"Cyan\")\n      ]),\n      _: 1\n    }),\n    _createVNode(SliderWithNumberInput, {\n      class: \"input\",\n      min: 0,\n      max: 1,\n      step: 0.01,\n      disabled: !_unref(selectedGenomeEntry),\n      modelValue: _unref(genome).cyanPigment,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_unref(genome).cyanPigment) = $event))\n    }, null, 8, [\"step\", \"disabled\", \"modelValue\"]),\n    _createVNode(InputLabel, { class: \"label\" }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"Magenta\")\n      ]),\n      _: 1\n    }),\n    _createVNode(SliderWithNumberInput, {\n      class: \"input\",\n      min: 0,\n      max: 1,\n      step: 0.01,\n      disabled: !_unref(selectedGenomeEntry),\n      modelValue: _unref(genome).magentaPigment,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_unref(genome).magentaPigment) = $event))\n    }, null, 8, [\"step\", \"disabled\", \"modelValue\"]),\n    _createVNode(InputLabel, { class: \"label\" }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"Yellow\")\n      ]),\n      _: 1\n    }),\n    _createVNode(SliderWithNumberInput, {\n      class: \"input\",\n      min: 0,\n      max: 1,\n      step: 0.01,\n      disabled: !_unref(selectedGenomeEntry),\n      modelValue: _unref(genome).yellowPigment,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_unref(genome).yellowPigment) = $event))\n    }, null, 8, [\"step\", \"disabled\", \"modelValue\"]),\n    _createVNode(InputLabel, { class: \"label\" }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"White\")\n      ]),\n      _: 1\n    }),\n    _createVNode(SliderWithNumberInput, {\n      class: \"input\",\n      min: 0,\n      max: 1,\n      step: 0.01,\n      disabled: !_unref(selectedGenomeEntry),\n      modelValue: _unref(genome).whitePigment,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_unref(genome).whitePigment) = $event))\n    }, null, 8, [\"step\", \"disabled\", \"modelValue\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(GenomePigmentColorDropletIcon, {\n        class: \"pigment-icon\",\n        color: \"cyan\",\n        value: _unref(genome).cyanPigment\n      }, null, 8, [\"value\"]),\n      _createVNode(GenomePigmentColorDropletIcon, {\n        class: \"pigment-icon\",\n        color: \"magenta\",\n        value: _unref(genome).magentaPigment\n      }, null, 8, [\"value\"]),\n      _createVNode(GenomePigmentColorDropletIcon, {\n        class: \"pigment-icon\",\n        color: \"yellow\",\n        value: _unref(genome).yellowPigment\n      }, null, 8, [\"value\"]),\n      _createVNode(GenomePigmentColorDropletIcon, {\n        class: \"pigment-icon\",\n        color: \"white\",\n        value: _unref(genome).whitePigment\n      }, null, 8, [\"value\"])\n    ])\n  ]))\n}\n}\n\n})","import script from \"./GenomePigmentsEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GenomePigmentsEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GenomePigmentsEditor.vue?vue&type=style&index=0&id=d1c55dbc&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport PropertiesSubheader from \"@/component/properties/PropertiesSubheader.vue\";\nimport GenomePigmentsEditor from \"@/component/genome/GenomePigmentsEditor.vue\";\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GenomeEditor',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(PropertiesSubheader, null, {\n      default: _withCtx(() => [\n        _createTextVNode(\"Pigments\")\n      ]),\n      _: 1\n    }),\n    _createVNode(GenomePigmentsEditor),\n    _createVNode(PropertiesSubheader, null, {\n      default: _withCtx(() => [\n        _createTextVNode(\"Children\")\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","import script from \"./GenomeEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GenomeEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, isRef as _isRef, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport {inject, provide, ref, Ref} from \"vue\";\nimport PropertiesSection from \"@/component/properties/PropertiesSection.vue\";\nimport GenomeLibrary, { GenomeLibraryEntry } from \"@/game/GenomeLibrary\";\nimport GenomeSelector from \"@/component/genome/GenomeSelector.vue\";\nimport GenomeEditor from \"@/component/genome/GenomeEditor.vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GenomeLibraryEditor',\n  setup(__props) {\n\nconst library = inject('genomeLibrary') as Ref<GenomeLibrary>;\n\nlet selectedGenomeEntry = ref<GenomeLibraryEntry | null>(null);\nprovide('selectedGenomeEntry', selectedGenomeEntry);\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(PropertiesSection, { title: \"Genome editor\" }, {\n    default: _withCtx(() => [\n      _createVNode(GenomeSelector, {\n        library: _unref(library),\n        modelValue: _unref(selectedGenomeEntry),\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(selectedGenomeEntry) ? (selectedGenomeEntry).value = $event : selectedGenomeEntry = $event))\n      }, null, 8, [\"library\", \"modelValue\"]),\n      _createVNode(GenomeEditor)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./GenomeLibraryEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GenomeLibraryEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\"\nimport _imports_0 from '@public/icon/time_control/pause.svg'\nimport _imports_1 from '@public/icon/time_control/play.svg'\n\n\nconst _hoisted_1 = { class: \"c-time-control\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"icon\",\n  src: _imports_0,\n  alt: \"pause icon\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"icon\",\n  src: _imports_1,\n  alt: \"play icon\"\n}\n\nimport {inject, Ref} from \"vue\";\n\nimport HudButton from \"@/component/HudButton.vue\";\nimport WorldUpdater from \"@/game/world/updater/WorldUpdater\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TimeControl',\n  setup(__props) {\n\nconst updater = inject('worldUpdater') as Ref<WorldUpdater>;\n\nfunction onPausePlayButtonClick() {\n  if (updater.value.simulationActive)\n    updater.value.pauseSimulation();\n  else\n    updater.value.startSimulation();\n}\n\nfunction onSpeedButtonClick(speed: number) {\n  updater.value.simulationSpeed = speed;\n  updater.value.startSimulation();\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(HudButton, {\n      class: \"button pause-play-button\",\n      onClick: onPausePlayButtonClick\n    }, {\n      default: _withCtx(() => [\n        (_unref(updater).simulationActive)\n          ? (_openBlock(), _createElementBlock(\"img\", _hoisted_2))\n          : (_openBlock(), _createElementBlock(\"img\", _hoisted_3))\n      ]),\n      _: 1\n    }),\n    _createVNode(HudButton, {\n      class: \"button play-1x-button\",\n      \"border-radius\": \"default 0 0 default\",\n      \"border-width\": \"default 0.5px default default\",\n      active: _unref(updater).simulationSpeed === 1,\n      onClick: _cache[0] || (_cache[0] = () => onSpeedButtonClick(1))\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(\" x1 \")\n      ]),\n      _: 1\n    }, 8, [\"active\"]),\n    _createVNode(HudButton, {\n      class: \"button play-2x-button\",\n      \"border-radius\": \"0\",\n      \"border-width\": \"default 0.5px\",\n      active: _unref(updater).simulationSpeed === 2,\n      onClick: _cache[1] || (_cache[1] = () => onSpeedButtonClick(2))\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(\" x2 \")\n      ]),\n      _: 1\n    }, 8, [\"active\"]),\n    _createVNode(HudButton, {\n      class: \"button play-5x-button\",\n      \"border-radius\": \"0.5px default default 0\",\n      \"border-width\": \"default default default 0.5px\",\n      active: _unref(updater).simulationSpeed === 5,\n      onClick: _cache[2] || (_cache[2] = () => onSpeedButtonClick(5))\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(\" x5 \")\n      ]),\n      _: 1\n    }, 8, [\"active\"])\n  ]))\n}\n}\n\n})","import script from \"./TimeControl.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TimeControl.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./TimeControl.vue?vue&type=style&index=0&id=f7fa11ec&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\"\nimport _imports_0 from '@public/icon/properties/genome-editor.svg'\nimport _imports_1 from '@public/icon/properties/settings.svg'\n\n\nconst _hoisted_1 = { class: \"c-controls-panel\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"properties-tab__icon\",\n  src: _imports_0,\n  alt: \"Tab icon\"\n}, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"properties-tab__icon\",\n  src: _imports_1,\n  alt: \"Tab icon\"\n}, null, -1)\nconst _hoisted_4 = { class: \"tool-buttons-container\" }\nconst _hoisted_5 = [\"src\"]\n\nimport { inject } from \"vue\";\nimport PropertiesTabbedPanel from \"@/component/properties/PropertiesTabbedPanel.vue\";\nimport PropertiesTab from \"@/component/properties/PropertiesTab.vue\";\nimport ToolsManager from \"@/tool/ToolsManager\";\nimport HudButton from \"@/component/HudButton.vue\";\nimport PropertiesTabBody from \"@/component/properties/PropertiesTabBody.vue\";\nimport WorldSettings from \"@/component/WorldSettings.vue\";\nimport GenomeLibraryEditor from \"@/component/genome/GenomeLibraryEditor.vue\";\nimport TimeControl from \"@/component/TimeControl.vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HudPanel',\n  setup(__props) {\n\nconst toolsManager = inject('toolsManager') as ToolsManager;\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(PropertiesTabbedPanel, { class: \"properties-container\" }, {\n      tabs: _withCtx(() => [\n        _createVNode(PropertiesTab, {\n          class: \"properties-tab\",\n          name: \"genome-editor\"\n        }, {\n          default: _withCtx(() => [\n            _hoisted_2\n          ]),\n          _: 1\n        }),\n        _createVNode(PropertiesTab, {\n          class: \"properties-tab\",\n          name: \"settings\"\n        }, {\n          default: _withCtx(() => [\n            _hoisted_3\n          ]),\n          _: 1\n        })\n      ]),\n      bodies: _withCtx(() => [\n        _createVNode(PropertiesTabBody, { name: \"genome-editor\" }, {\n          default: _withCtx(() => [\n            _createVNode(GenomeLibraryEditor)\n          ]),\n          _: 1\n        }),\n        _createVNode(PropertiesTabBody, { name: \"settings\" }, {\n          default: _withCtx(() => [\n            _createVNode(WorldSettings)\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createElementVNode(\"div\", _hoisted_4, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(toolsManager).tools, (tool) => {\n        return (_openBlock(), _createBlock(HudButton, {\n          class: \"tool-button\",\n          key: tool.name,\n          disabled: !tool.enabled,\n          active: _unref(toolsManager).currentTool === tool,\n          onClick: ($event: any) => (_unref(toolsManager).currentTool = tool)\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"img\", {\n              class: \"tool-button__icon\",\n              src: tool.icon,\n              alt: \"Tool icon\"\n            }, null, 8, _hoisted_5)\n          ]),\n          _: 2\n        }, 1032, [\"disabled\", \"active\", \"onClick\"]))\n      }), 128))\n    ]),\n    _createVNode(TimeControl)\n  ]))\n}\n}\n\n})","import script from \"./HudPanel.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HudPanel.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./HudPanel.vue?vue&type=style&index=0&id=167bbffc&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import Genome from \"@/game/Genome\";\n\nexport default class GenomeLibrary {\n    entries: Set<GenomeLibraryEntry> = new Set()\n\n    search(query: string): Set<GenomeLibraryEntry> {\n        const result = new Set<GenomeLibraryEntry>()\n        this.entries.forEach( entry => {\n            if (entry.name.toLowerCase().includes(query.toLowerCase()))\n                result.add(entry)\n        })\n        return result\n    }\n}\n\nexport class GenomeLibraryEntry {\n    constructor(\n        public name: string,\n        public genome: Genome\n    ) {}\n}","export default class AppPreferences {\n    // Nothing here so far...\n}","import WorldMouseEvent from \"@/game/event/WorldMouseEvent\";\nimport Tool from \"@/tool/Tool\";\nimport World from \"@/game/world/World\";\n\nexport default class ToolsManager {\n\n    public currentTool: Tool\n\n    constructor(\n        public tools: Tool[],\n        private world: World\n    ) {\n        tools.forEach(tool => tool.init(this))\n        this.currentTool = tools[0]\n    }\n\n    dispatchEvent(event: WorldMouseEvent) {\n        // TODO\n    }\n}","import Tool from \"@/tool/Tool\";\nimport ToolsManager from \"@/tool/ToolsManager\";\n\nexport default class AddCellTool implements Tool {\n    name = \"Add cell\"\n    icon = require(\"@public/icon/tool/add-cell.svg\")\n    enabled = false\n\n    private toolsManager: ToolsManager | null = null;\n\n    init(toolsManager: ToolsManager) {\n        this.toolsManager = toolsManager\n    }\n\n    onSelect() {\n\n    }\n\n    onUnselect() {\n\n    }\n}","import Tool from \"@/tool/Tool\";\nimport ToolsManager from \"@/tool/ToolsManager\";\n\nexport default class RemoveCellTool implements Tool {\n    name = \"Remove cell\"\n    icon = require(\"@public/icon/tool/remove-cell.svg\")\n    enabled = false\n\n    init(toolsManager: ToolsManager) {}\n\n    onSelect() {}\n\n    onUnselect() {}\n}","import Tool from \"@/tool/Tool\";\nimport ToolsManager from \"@/tool/ToolsManager\";\n\nexport default class SelectionTool implements Tool {\n    name = \"Selection\";\n    icon = require(\"@public/icon/tool/selection.svg\")\n    enabled = true\n\n    init(toolsManager: ToolsManager): void {\n\n    }\n\n    onSelect(): void {\n\n    }\n\n    onUnselect(): void {\n\n    }\n}","import Updater from \"@/game/world/updater/Updater\";\nimport World from \"@/game/world/World\";\nimport UpdateContext from \"@/game/world/updater/UpdateContext\";\n\nexport default class ResetContextUpdater implements Updater {\n    constructor(\n        private world: World,\n        private context: UpdateContext\n    ) {}\n\n    update(): void {\n        this.context.cellsSpeedBuffer.clear();\n        this.context.cellsAngularSpeedBuffer.clear();\n\n        for (const cell of this.world.cells.values()) {\n            this.context.cellsSpeedBuffer.set(cell.id, cell.speed);\n            this.context.cellsAngularSpeedBuffer.set(cell.id, cell.angularSpeed);\n        }\n    }\n}","import Vector2 from \"@/geom/Vector2\";\n\nexport default class UpdateContext {\n    cellsSpeedBuffer = new Map<number, Vector2>();\n    cellsAngularSpeedBuffer = new Map<number, number>();\n}","import Updater from \"@/game/world/updater/Updater\";\nimport World from \"@/game/world/World\";\nimport Cell, {CellConnectionState} from \"@/game/world/object/Cell\";\nimport Wall from \"@/game/world/object/Wall\";\nimport Vector2 from \"@/geom/Vector2\";\nimport Geometry from \"@/geom/Geometry\";\nimport UpdateContext from \"@/game/world/updater/UpdateContext\";\n\nexport default class KineticsUpdater implements Updater {\n    private static CELL_STICKINESS_DEPTH = 3\n\n    constructor(\n        private world: World,\n        private context: UpdateContext,\n    ) {}\n\n    update(delta: number): void {\n        for (const cell of this.world.cells.values()) {\n            this.processGravity(cell, delta);\n\n            this.world.circleCast(cell.center, cell.radius).forEach(wo => {\n                if (wo instanceof Wall)\n                    this.processCellWallCollision(cell, wo, delta);\n                else if (wo instanceof Cell)\n                    this.processCellsCollision(cell, wo, delta);\n            })\n\n            for (const connection of cell.connections.values())\n                this.processCellConnection(cell, connection, delta);\n        }\n    }\n\n    private processGravity(cell: Cell, delta: number) {\n        let speed = this.context.cellsSpeedBuffer.get(cell.id)!;\n        speed = speed.plus(this.world.gravity.times(delta));\n        this.context.cellsSpeedBuffer.set(cell.id, speed);\n    }\n\n    private processCellWallCollision(cell: Cell, wall: Wall, delta: number) {\n        const intersections = Geometry.findLineAndCircleIntersections(cell.center, cell.radius, wall.a, wall.b);\n        if (intersections.length !== 0) {\n            const projection = Geometry.projectPointOntoLine(cell.center, [wall.a, wall.b]);\n            const oppositeForce = projection.to(cell.center).unit.times(cell.radius - projection.distance(cell.center));\n            const depth = Geometry.clamp(1 - cell.center.distance(projection) / cell.radius, 0, 1);\n            const hardnessCoefficient = Math.pow(cell.genome.hardness * depth + 1, cell.genome.hardness + 1);\n            const oldSpeed = this.context.cellsSpeedBuffer.get(cell.id)!;\n            const newSpeed = oldSpeed.plus(oppositeForce.times(hardnessCoefficient * delta));\n            this.context.cellsSpeedBuffer.set(cell.id, newSpeed);\n        }\n    }\n\n    private processCellsCollision(cell: Cell, otherCell: Cell, delta: number) {\n        if (cell.id == otherCell.id)\n            return;\n\n        if (cell.center.distance(otherCell.center) <= cell.radius + otherCell.radius) {\n            const intersections = Geometry.findCirclesIntersections(\n                cell.center, cell.radius, otherCell.center, otherCell.radius\n            );\n\n            const pivot = intersections.length != 0\n                ? intersections[0].plus(intersections[1]).div(2)\n                : cell.center.plus(otherCell.center).div(2);\n\n            const depth = Geometry.clamp(1 - cell.center.distance(pivot) / cell.radius, 0, 1);\n            const massSum = cell.mass + otherCell.mass;\n            const thisMassCoefficient = cell.mass / massSum;\n            const oppositeForce = pivot.to(cell.center).unit.times(cell.radius - pivot.distance(cell.center));\n            const hardnessCoefficient = Math.pow(cell.genome.hardness * depth + 1, cell.genome.hardness + 1);\n            const oldSpeed = this.context.cellsSpeedBuffer.get(cell.id)!;\n            const newSpeed = oldSpeed.plus(\n                oppositeForce\n                    .times(hardnessCoefficient)\n                    .plus(\n                        otherCell.speed\n                            .times(thisMassCoefficient)\n                            .minus(cell.speed.times(1 - thisMassCoefficient))\n                            .times(cell.genome.hardness)\n                    ).times(delta)\n            );\n            this.context.cellsSpeedBuffer.set(cell.id, newSpeed);\n        }\n    }\n\n    private processCellConnection(cell: Cell, connection: CellConnectionState, delta: number) {\n        const partner = this.world.cells.get(connection.partnerId);\n        if (!partner)\n            return;\n\n        const partnerConnection = partner.connections.get(cell.id);\n        if (!partnerConnection)\n            return;\n\n        // 4 is picked as balance between physical stability and computational load\n        for (let stringId = 0; stringId < 4; stringId++) {\n            const angleOffset = stringId * Math.PI / 24 - 1.5 * Math.PI / 24;\n            const effectiveConnectionAngle = cell.angle + connection.angle + angleOffset;\n            const effectiveConnectionForceOrigin = cell.center\n                    .plus(Vector2.unit(effectiveConnectionAngle).times(cell.radius))\n                    .minus(Vector2.unit(effectiveConnectionAngle).times(KineticsUpdater.CELL_STICKINESS_DEPTH));\n            const effectiveConnectionForceDestination = partner.center\n                .plus(Vector2.unit(partner.angle + partnerConnection.angle - angleOffset).times(partner.radius))\n                .minus(\n                    Vector2.unit(partner.angle + partnerConnection.angle - angleOffset)\n                        .times(KineticsUpdater.CELL_STICKINESS_DEPTH)\n                );\n            const connectionForceDirection = effectiveConnectionForceOrigin\n                .to(effectiveConnectionForceDestination)\n                .div(4)\n                .times(delta);\n            this.applyImpulse(cell, effectiveConnectionForceOrigin, connectionForceDirection)\n        }\n    }\n\n    private applyImpulse(cell: Cell, impulseOrigin: Vector2, impulseDirection: Vector2) {\n        if (impulseDirection.length == 0)\n            return;\n        const originToCenterAngle = impulseOrigin.to(cell.center).angle;\n        const directionRelativeAngle = originToCenterAngle - impulseDirection.angle;\n        const impulseOriginDistance = cell.center.distance(impulseOrigin);\n        const projectedDistance = Math.sin(directionRelativeAngle) * impulseOriginDistance;\n        const translationImpactCoefficient = 1 / (Math.pow(projectedDistance / cell.radius, 2) + 1);\n        const rotationImpactCoefficient = 1 - translationImpactCoefficient;\n        const oldSpeed = this.context.cellsSpeedBuffer.get(cell.id)!;\n        const newSpeed = oldSpeed.plus(impulseDirection.times(translationImpactCoefficient));\n        const oldAngularSpeed = this.context.cellsAngularSpeedBuffer.get(cell.id)!;\n        const newAngularSpeed = oldAngularSpeed\n            - Math.atan(impulseDirection.length / projectedDistance) * rotationImpactCoefficient;\n        this.context.cellsSpeedBuffer.set(cell.id, newSpeed);\n        this.context.cellsAngularSpeedBuffer.set(cell.id, newAngularSpeed);\n    }\n}","import UpdateContext from \"@/game/world/updater/UpdateContext\";\nimport Updater from \"@/game/world/updater/Updater\";\nimport World from \"@/game/world/World\";\n\nexport default class ApplyContextUpdater implements Updater {\n    constructor(\n        private world: World,\n        private context: UpdateContext\n    ) {}\n\n    update(): void {\n        this.context.cellsSpeedBuffer.forEach((value, key) => {\n            const cell = this.world.cells.get(key)\n            if (cell) {\n                cell.speed = value;\n            }\n        });\n        this.context.cellsAngularSpeedBuffer.forEach((value, key) => {\n            const cell = this.world.cells.get(key)\n            if (cell) {\n                cell.angularSpeed = value;\n            }\n        });\n    }\n}","import Updater from \"@/game/world/updater/Updater\";\nimport World from \"@/game/world/World\";\n\nexport default class PositionUpdater implements Updater {\n    constructor(\n        private world: World\n    ) {}\n\n    update(delta: number): void {\n        this.world.cells.forEach(cell => {\n            cell.center = cell.center.plus(cell.speed.times(delta));\n            cell.angle = cell.angle + cell.angularSpeed * delta;\n            cell.speed = cell.speed.minus(cell.speed.times(this.world.viscosity * delta));\n            cell.angularSpeed -= cell.angularSpeed * this.world.viscosity * delta;\n        });\n    }\n}","import World from \"@/game/world/World\";\nimport ResetContextUpdater from \"@/game/world/updater/ResetContextUpdater\";\nimport UpdateContext from \"@/game/world/updater/UpdateContext\";\nimport KineticsUpdater from \"@/game/world/updater/KineticsUpdater\";\nimport ApplyContextUpdater from \"@/game/world/updater/ApplyContextUpdater\";\nimport Updater from \"@/game/world/updater/Updater\";\nimport PositionUpdater from \"@/game/world/updater/PositionUpdater\";\n\nexport default class WorldUpdater {\n    constructor(\n        private world: World\n    ) {\n        this.updateContext = new UpdateContext();\n        this.updatePipeline = [\n            new ResetContextUpdater(this.world, this.updateContext),\n            new KineticsUpdater(this.world, this.updateContext),\n            new ApplyContextUpdater(this.world, this.updateContext),\n            new PositionUpdater(this.world)\n        ]\n    }\n\n    static readonly SIMULATION_TICK_FIXED_DELTA = 16;\n    static readonly SIMULATION_SPEED_FACTOR = 5;\n\n    private readonly updateContext: UpdateContext\n    private readonly updatePipeline: Updater[]\n\n    simulationSpeed = 1;\n\n    private intervalId = -1;\n    private lastUpdateMillis = -1;\n\n    get simulationActive() {\n        return this.intervalId != -1;\n    }\n\n    startSimulation() {\n        if (!this.simulationActive) {\n            this.intervalId = setInterval(\n                this.intervalRoutine.bind(this),\n                WorldUpdater.SIMULATION_TICK_FIXED_DELTA\n            );\n            this.lastUpdateMillis = Date.now();\n        }\n    }\n\n    pauseSimulation() {\n        if (this.simulationActive)\n            clearInterval(this.intervalId);\n        this.intervalId = -1;\n    }\n\n    tick(delta: number) {\n        for (const updater of this.updatePipeline)\n            updater.update(delta);\n    }\n\n    private intervalRoutine() {\n        const deltaMillis = Date.now() - this.lastUpdateMillis;\n        const ticksRequiredOriginal = Math.round(deltaMillis / WorldUpdater.SIMULATION_TICK_FIXED_DELTA);\n        const ticksRequiredMultiplied = Math.min(\n            Math.round(deltaMillis * this.simulationSpeed / WorldUpdater.SIMULATION_TICK_FIXED_DELTA),\n            10\n        );\n        for (let i = 0; i < ticksRequiredMultiplied; i++)\n            this.tick(WorldUpdater.SIMULATION_TICK_FIXED_DELTA / 1000 * WorldUpdater.SIMULATION_SPEED_FACTOR);\n        this.lastUpdateMillis += WorldUpdater.SIMULATION_TICK_FIXED_DELTA * ticksRequiredOriginal;\n    }\n\n    // physics layers:\n    // 1. cell physics\n    // 2. cell nutrition\n    // 3. cell action\n    // 4. food\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { provide, ref } from \"vue\";\n\nimport WorldViewer from \"@/component/WorldViewer.vue\";\nimport ControlsPanel from \"@/component/HudPanel.vue\";\nimport GenomeLibrary, {GenomeLibraryEntry} from \"@/game/GenomeLibrary\";\nimport World from \"@/game/world/World\";\nimport AppPreferences from \"@/AppPreferences\";\nimport ToolsManager from \"@/tool/ToolsManager\";\nimport AddCellTool from \"@/tool/AddCellTool\";\nimport RemoveCellTool from \"@/tool/RemoveCellTool\";\nimport Genome from \"@/game/Genome\";\nimport SelectionTool from \"@/tool/SelectionTool\";\nimport WorldUpdater from \"@/game/world/updater/WorldUpdater\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\nconst tools = [ new SelectionTool(), new AddCellTool(), new RemoveCellTool() ];\nconst world = World.TEMPORARY_DEBUG;\n\nconst genomeLibrary = new GenomeLibrary();\nconst worldUpdater = new WorldUpdater(world);\nconst appPreferences = new AppPreferences();\nconst toolsManager = new ToolsManager(tools, world);\n\ngenomeLibrary.entries.add(new GenomeLibraryEntry(\"my genome\", Genome.newSampleGenome()));\ngenomeLibrary.entries.add(new GenomeLibraryEntry(\"test\", Genome.newSampleGenome()));\ngenomeLibrary.entries.add(new GenomeLibraryEntry(\"aaaaaaaaa\", Genome.newSampleGenome()));\ngenomeLibrary.entries.add(new GenomeLibraryEntry(\"aboba\", Genome.newSampleGenome()));\n\nprovide('world', world);\nprovide('worldUpdater', ref(worldUpdater));\nprovide('genomeLibrary', ref(genomeLibrary));\nprovide('appPreferences', ref(appPreferences));\nprovide('toolsManager', ref(toolsManager));\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(WorldViewer),\n    _createVNode(ControlsPanel, { class: \"controls-panel\" })\n  ], 64))\n}\n}\n\n})","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2f4a91aa&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.directive('click-outside', {\n    mounted: function (el, binding) {\n        el.clickOutsideEvent = function (event: MouseEvent) {\n            if (!(el == event.target || el.contains(event.target))) {\n                binding.value(event);\n            }\n        };\n        document.body.addEventListener('click', el.clickOutsideEvent)\n    },\n    beforeUnmount: function (el) {\n        document.body.removeEventListener('click', el.clickOutsideEvent)\n    },\n});\n\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcybercells\"] = self[\"webpackChunkcybercells\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7439); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["ShaderManager","constructor","gl","static","canvas","getContext","powerPreference","Error","newShader","vertexShaderSource","fragmentShaderSource","vertexShader","this","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","newTexture","width","height","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","newArrayBuffer","data","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","destroy","getExtension","loseContext","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","sqrt","pow","sin","cos","acos","PI","Math","Vector2","x","y","length","plus","rvalue","minus","times","factor","div","negative","dot","that","to","nearest","vectors","reduce","a","b","distance","shortestAngularTurn","diff","angle","positiveAngleDiff","angleSafe","isNaN","rotate","radians","unit","vector","Aabb","min","max","center","Cell","speed","mass","angularSpeed","genome","Map","radius","aabb","Wall","Geometry","circleCenter","circleRadius","lineStart","lineEnd","v1","v2","c","d","u1","u2","result","push","circle1Center","circle1Radius","circle2Center","circle2Radius","lineA","lineB","lineAVector","lineBVector","angle1Ratio","angle2Ratio","isFinite","findVerticalLineIntersection","lineAOffset","lineBOffset","intersection","point","line","value","verticalLine","otherLine","otherAngleRatio","line2Offset","avgY","abs","WorldRenderer","shaderManager","backgroundShader","cellShader","wallShader","emptyShader","world","Date","now","layers","background","walls","cells","mainMesh","createMainMesh","drawBufferTextureUv","createDrawBufferTextureUv","framebuffer","createFramebuffer","autoUpdateDrawBufferTexture","worldState","init","commonVertexShaderSource","backgroundFragmentShaderSource","cellFragmentShaderSource","wallFragmentShaderSource","emptyFragmentShaderSource","render","setDrawToBufferTexture","swapBuffers","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","drawingBufferWidth","drawingBufferHeight","config","renderBackground","renderCells","renderWalls","renderBufferToCanvas","project","worldPoint","projection","buildCameraTransform","inverted","mat4","vec2","unproject","screenPoint","useProgram","setupVertexShader","bindFramebuffer","FRAMEBUFFER","sourceBufferTexture","uniform1i","getUniformLocation","setDrawToCanvas","drawArrays","TRIANGLE_STRIP","viewMatrix","buildViewTransform","uniformMatrix4fv","uniform2f","bufferTextureSize","wall","values","uniform1f","startTime","cell","aabbMinX","aabbMinY","aabbMaxX","aabbMaxY","cellRgba","cellPigmentsToRgba","cyanPigment","magentaPigment","yellowPigment","whitePigment","id","uniform4f","obstaclesStruct","circleCast","forEach","wo","intersections","findCirclesIntersections","slice","index","vertexAttributeLoc","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","textureCoordinateLoc","lightIntensity","canvasWidth","canvasHeight","camera","scale","drawBufferTextureNeedsUpdate","deleteTexture","targetBufferTexture","framebufferTexture2D","COLOR_ATTACHMENT0","swap","cyan","magenta","yellow","white","r","g","WorldMouseEvent","screenX","screenY","worldX","worldY","_hoisted_1","_defineComponent","__name","setup","__props","emit","SCROLL_SENSITIVITY","canvasRef","ref","containerRef","container","renderer","canvasSizeObserver","animationFrameRequest","inject","dragging","dragMode","lastMouseWorldPoint","onWheel","event","deltaY","onTouchEvent","touches","mouseEventType","clientX","clientY","dps","window","devicePixelRatio","worldEvent","handleDraggingEvent","onMouseEvent","prevX","prevY","renderingRoutine","requestAnimationFrame","onCanvasResize","dpr","getBoundingClientRect","round","onMounted","ResizeObserver","observe","onBeforeUnmount","disconnect","cancelAnimationFrame","_ctx","_cache","_openBlock","_createElementBlock","class","ref_key","_createElementVNode","onClick","onMousedown","onMouseup","onMousemove","onMouseleave","onTouchstart","_withModifiers","onTouchmove","onTouchend","__exports__","_hoisted_2","_hoisted_3","activeTabName","minWidth","dragStartX","oldWidth","onHandleDragStart","initHandleDragging","addEventListener","onHandleDrag","stopHandleDragging","offset","removeEventListener","provide","draggable","style","_normalizeStyle","_renderSlot","$slots","props","active","Boolean","default","disabled","borderRadius","borderWidth","_useCssVars","_unref","defaultsSupportingBorderRadius","defaultsSupportingBorderWidth","computed","replaceAll","_normalizeClass","name","_createBlock","HudButton","_withCtx","_","key","_createCommentVNode","title","_toDisplayString","step","modelValue","emits","watch","_withDirectives","$event","_vModelText","textInput","_createVNode","Slider","modelModifiers","number","onFocus","select","onKeydown","_withKeys","blur","script","PropertiesSection","InputLabel","_createTextVNode","SliderWithNumberInput","gravity","density","viscosity","CellType","Food","FOOD_DENSITY","Genome","hardness","splitMass","splitAngle","child1Angle","child2Angle","stickOnSplit","child1KeepConnections","child2KeepConnections","nutritionPriority","copyRecursive","applyRadiationLocally","getRandomCellPigments","cmyw","random","i","randomIndex","floor","copies","set","flagellumForce","children","has","get","findAllGenomes","stash","Array","Set","pop","element","add","applyRadiationRecursive","Camera","World","radiation","NULL","newId","idCounter","object","food","remove","delete","connections","keys","getLightIntensityAtPoint","getRadiationIntensityAtPoint","rayCast","it","findLinesIntersection","findLineAndCircleIntersections","newSampleGenome","updateRendererDummyWorld","dummyWorld","getDefault","dummyCell","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","library","nameInput","dropdownOpened","libraryEntriesFiltered","entries","search","onInputFocus","e","input","target","item","cancelSelection","resetNameInput","_directive_click_outside","_resolveDirective","CellGenomePreview","placeholder","_Fragment","_renderList","_vShow","color","String","Number","canvasCtx","startObservingCanvasSizeChange","stopObservingCanvasSizeChange","drawDroplet","w","h","gradient","createLinearGradient","clippedValue","addColorStop","clearRect","strokeStyle","fillStyle","lineWidth","beginPath","moveTo","lineTo","arc","stroke","fill","selectedGenomeEntry","newNullGenome","GenomePigmentColorDropletIcon","PropertiesSubheader","GenomePigmentsEditor","GenomeSelector","_isRef","GenomeEditor","src","_imports_0","alt","_imports_1","updater","onPausePlayButtonClick","simulationActive","pauseSimulation","startSimulation","onSpeedButtonClick","simulationSpeed","toolsManager","PropertiesTabbedPanel","tabs","PropertiesTab","bodies","PropertiesTabBody","GenomeLibraryEditor","WorldSettings","tools","tool","enabled","currentTool","icon","TimeControl","GenomeLibrary","query","entry","toLowerCase","includes","GenomeLibraryEntry","AppPreferences","ToolsManager","dispatchEvent","AddCellTool","require","onSelect","onUnselect","RemoveCellTool","SelectionTool","ResetContextUpdater","context","update","cellsSpeedBuffer","cellsAngularSpeedBuffer","UpdateContext","KineticsUpdater","delta","processGravity","processCellWallCollision","processCellsCollision","connection","processCellConnection","projectPointOntoLine","oppositeForce","depth","clamp","hardnessCoefficient","oldSpeed","newSpeed","otherCell","pivot","massSum","thisMassCoefficient","partner","partnerId","partnerConnection","stringId","angleOffset","effectiveConnectionAngle","effectiveConnectionForceOrigin","CELL_STICKINESS_DEPTH","effectiveConnectionForceDestination","connectionForceDirection","applyImpulse","impulseOrigin","impulseDirection","originToCenterAngle","directionRelativeAngle","impulseOriginDistance","projectedDistance","translationImpactCoefficient","rotationImpactCoefficient","oldAngularSpeed","newAngularSpeed","atan","ApplyContextUpdater","PositionUpdater","WorldUpdater","updateContext","updatePipeline","intervalId","setInterval","intervalRoutine","bind","SIMULATION_TICK_FIXED_DELTA","lastUpdateMillis","clearInterval","tick","deltaMillis","ticksRequiredOriginal","ticksRequiredMultiplied","SIMULATION_SPEED_FACTOR","TEMPORARY_DEBUG","genomeLibrary","worldUpdater","appPreferences","WorldViewer","ControlsPanel","app","createApp","App","directive","mounted","el","binding","clickOutsideEvent","contains","document","body","beforeUnmount","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","every","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}